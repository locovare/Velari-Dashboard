{"version":3,"file":"index-Bro1UmNa.js","sources":["../../src/services/DiscordAPI.ts","../../src/components/WelcomeScreen.ts","../../src/components/Dashboard.ts","../../src/components/LandingPage.ts","../../src/App.ts","../../src/utils/auth.ts","../../src/main.ts"],"sourcesContent":["import { DiscordUser, DiscordGuild, DiscordTokenResponse } from '../types'\r\n\r\nexport class DiscordAPI {\r\n  private readonly CLIENT_ID = import.meta.env.VITE_DISCORD_CLIENT_ID || 'YOUR_DISCORD_CLIENT_ID'\r\n  private readonly REDIRECT_URI = import.meta.env.VITE_DISCORD_REDIRECT_URI || 'http://localhost:3000/callback'\r\n  private readonly BOT_CLIENT_ID = import.meta.env.VITE_DISCORD_BOT_CLIENT_ID || 'YOUR_BOT_CLIENT_ID'\r\n  private readonly CLIENT_SECRET = import.meta.env.VITE_DISCORD_CLIENT_SECRET || 'YOUR_CLIENT_SECRET'\r\n  private readonly API_BASE = 'https://discord.com/api/v10'\r\n\r\n  public getAuthUrl(): string {\r\n    const params = new URLSearchParams({\r\n      client_id: this.CLIENT_ID,\r\n      redirect_uri: this.REDIRECT_URI,\r\n      response_type: 'code',\r\n      scope: 'identify guilds'\r\n    })\r\n    return `https://discord.com/api/oauth2/authorize?${params.toString()}`\r\n  }\r\n\r\n  public async exchangeCodeForToken(code: string): Promise<DiscordTokenResponse> {\r\n    const response = await fetch(`${this.API_BASE}/oauth2/token`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        client_id: this.CLIENT_ID,\r\n        client_secret: this.CLIENT_SECRET,\r\n        grant_type: 'authorization_code',\r\n        code: code,\r\n        redirect_uri: this.REDIRECT_URI,\r\n      }),\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to exchange code for token')\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  public async getUserInfo(token: string): Promise<DiscordUser> {\r\n    const response = await fetch(`${this.API_BASE}/users/@me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to get user info')\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  public async getUserGuilds(token: string): Promise<DiscordGuild[]> {\r\n    const response = await fetch(`${this.API_BASE}/users/@me/guilds`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to get user guilds')\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  public getBotInviteUrl(guildId: string): string {\r\n    const params = new URLSearchParams({\r\n      client_id: this.BOT_CLIENT_ID,\r\n      permissions: '8', // Administrator permissions\r\n      scope: 'bot',\r\n      guild_id: guildId,\r\n    })\r\n    return `https://discord.com/api/oauth2/authorize?${params.toString()}`\r\n  }\r\n} ","import { DiscordAPI } from '../services/DiscordAPI'\r\n\r\nexport class WelcomeScreen {\r\n  private container: HTMLElement\r\n  private discordAPI: DiscordAPI\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.container = container\r\n    this.discordAPI = new DiscordAPI()\r\n    this.render()\r\n  }\r\n\r\n  private render(): void {\r\n    this.container.innerHTML = `\r\n      <div class=\"min-h-screen flex items-center justify-center px-4\">\r\n        <div class=\"glass-effect rounded-2xl p-8 md:p-12 max-w-md w-full text-center\">\r\n          <!-- Logo/Brand -->\r\n          <div class=\"mb-8\">\r\n            <div class=\"w-20 h-20 mx-auto mb-4 flex items-center justify-center\">\r\n              <img src=\"@Velari_Logo.png\" alt=\"Velari Logo\" class=\"w-full h-full rounded-full\"/>\r\n            </div>\r\n            <h1 class=\"text-3xl font-bold text-white mb-2\">Velari</h1>\r\n            <p class=\"text-gray-200 text-lg\">Discord Bot Dashboard</p>\r\n          </div>\r\n\r\n          <!-- Welcome Message -->\r\n          <div class=\"mb-8\">\r\n            <h2 class=\"text-2xl font-semibold text-white mb-4\">Welcome to Velari</h2>\r\n            <p class=\"text-gray-300 leading-relaxed\">\r\n              Manage your Discord bot with ease. Connect your Discord account to view your servers and invite Velari to your communities.\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Features -->\r\n          <div class=\"mb-8 space-y-3\">\r\n            <div class=\"flex items-center text-gray-300\">\r\n              <svg class=\"w-5 h-5 text-discord-green mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\r\n              </svg>\r\n              <span>View all your Discord servers</span>\r\n            </div>\r\n            <div class=\"flex items-center text-gray-300\">\r\n              <svg class=\"w-5 h-5 text-discord-green mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\r\n              </svg>\r\n              <span>Invite Velari with one click</span>\r\n            </div>\r\n            <div class=\"flex items-center text-gray-300\">\r\n              <svg class=\"w-5 h-5 text-discord-green mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\r\n              </svg>\r\n              <span>Secure Discord OAuth integration</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Login Button -->\r\n          <button id=\"discord-login\" class=\"discord-button w-full py-4 px-6 rounded-xl text-white font-semibold text-lg flex items-center justify-center space-x-3\">\r\n            <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z\"/>\r\n            </svg>\r\n            <span>Continue with Discord</span>\r\n          </button>\r\n\r\n          <!-- Footer -->\r\n          <div class=\"mt-8 text-sm text-gray-400\">\r\n            <p>By continuing, you agree to our Terms of Service and Privacy Policy</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    this.attachEventListeners()\r\n  }\r\n\r\n  private attachEventListeners(): void {\r\n    const loginButton = this.container.querySelector('#discord-login')\r\n    if (loginButton) {\r\n      loginButton.addEventListener('click', () => {\r\n        this.handleDiscordLogin()\r\n      })\r\n    }\r\n  }\r\n\r\n  private handleDiscordLogin(): void {\r\n    const authUrl = this.discordAPI.getAuthUrl()\r\n    window.location.href = authUrl\r\n  }\r\n} ","import { DiscordAPI } from '../services/DiscordAPI'\r\nimport { \r\n  DiscordUser, \r\n  DiscordGuild,\r\n  GuildChannel,\r\n  GuildRole,\r\n  WelcomeSettings,\r\n  TicketSettings,\r\n  ModerationSettings,\r\n  BotSettings,\r\n  AutoRolesSettings,\r\n  ReactionRoleMenu,\r\n  ServerAnalytics,\r\n  LogType,\r\n  PermissionSettings,\r\n  LicenseKey,\r\n  KeyRedemptionLog,\r\n  Product,\r\n  Subscription,\r\n  Transaction,\r\n  Customer,\r\n  SalesAnalytics,\r\n  Storefront,\r\n  StoreProduct,\r\n  StoreOrder,\r\n  StoreCustomer,\r\n  PromoCode,\r\n  StoreAnalytics\r\n} from '../types'\r\n\r\nexport class Dashboard {\r\n  private container: HTMLElement\r\n  private discordAPI: DiscordAPI\r\n  private onLogout: () => void\r\n  private user: DiscordUser | null = null\r\n  private guilds: DiscordGuild[] = []\r\n\r\n  constructor(container: HTMLElement, discordAPI: DiscordAPI, onLogout: () => void) {\r\n    this.container = container\r\n    this.discordAPI = discordAPI\r\n    this.onLogout = onLogout\r\n    this.init()\r\n  }\r\n\r\n  private async init(): Promise<void> {\r\n    await this.loadUserData()\r\n    this.render()\r\n  }\r\n\r\n  private async loadUserData(): Promise<void> {\r\n    try {\r\n      const token = localStorage.getItem('discord_token')\r\n      if (!token) {\r\n        this.onLogout()\r\n        return\r\n      }\r\n\r\n      this.user = await this.discordAPI.getUserInfo(token)\r\n      const allGuilds = await this.discordAPI.getUserGuilds(token)\r\n      const ADMINISTRATOR = 0x8\r\n      this.guilds = allGuilds.filter(guild => (parseInt(guild.permissions) & ADMINISTRATOR) === ADMINISTRATOR)\r\n\r\n      // Check if the bot is in each guild using backend API\r\n      await Promise.all(this.guilds.map(async (guild) => {\r\n        try {\r\n          const resp = await fetch(`/api/check-bot-in-guild?guildId=${guild.id}`);\r\n          \r\n          if (!resp.ok) {\r\n            console.error('API error:', resp.status, resp.statusText);\r\n            guild.botInGuild = false;\r\n            return;\r\n          }\r\n      \r\n          const data = await resp.json();\r\n          guild.botInGuild = data.inGuild;\r\n        } catch (error) {\r\n          console.error('Error checking bot status:', error);\r\n          guild.botInGuild = false;\r\n        }\r\n      }))\r\n    } catch (error) {\r\n      console.error('Failed to load user data:', error)\r\n      localStorage.removeItem('discord_token')\r\n      this.onLogout()\r\n    }\r\n  }\r\n\r\n  private render(): void {\r\n    this.container.innerHTML = `\r\n      <div class=\"min-h-screen bg-gradient-to-br from-discord-darkest via-discord-dark to-discord-darker\">\r\n        <!-- Header -->\r\n        <header class=\"glass-effect border-b border-white/10\">\r\n          <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div class=\"flex justify-between items-center py-4\">\r\n              <div class=\"flex items-center space-x-4\">\r\n                <div class=\"w-10 h-10 bg-gradient-to-br from-discord-blurple to-purple-600 rounded-full flex items-center justify-center\">\r\n                  <svg class=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M10 2a8 8 0 100 16 8 8 0 000-16zM8 14a6 6 0 1112 0 6 6 0 01-12 0z\"/>\r\n                    <path d=\"M10 6a4 4 0 100 8 4 4 0 000-8z\"/>\r\n                  </svg>\r\n                </div>\r\n                <h1 class=\"text-2xl font-bold text-white\">Velari Dashboard</h1>\r\n              </div>\r\n              \r\n              <div class=\"flex items-center space-x-4\">\r\n                <button id=\"logout-btn\" class=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors\">\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <!-- Main Content -->\r\n        <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <!-- Welcome Section -->\r\n          <div class=\"mb-8\">\r\n            <h2 class=\"text-3xl font-bold text-white mb-2\">Welcome back, ${this.user?.username || 'User'}!</h2>\r\n            <p class=\"text-gray-300\">Manage your Discord servers and invite Velari to your communities.</p>\r\n          </div>\r\n\r\n          <!-- Stats -->\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n              <div class=\"flex items-center\">\r\n                <div class=\"p-3 bg-discord-green/20 rounded-lg\">\r\n                  <svg class=\"w-6 h-6 text-discord-green\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/>\r\n                  </svg>\r\n                </div>\r\n                <div class=\"ml-4\">\r\n                  <p class=\"text-sm font-medium text-gray-400\">Total Servers</p>\r\n                  <p class=\"text-2xl font-bold text-white\">${this.guilds.length}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n              <div class=\"flex items-center\">\r\n                <div class=\"p-3 bg-discord-blurple/20 rounded-lg\">\r\n                  <svg class=\"w-6 h-6 text-discord-blurple\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fill-rule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\"/>\r\n                  </svg>\r\n                </div>\r\n                <div class=\"ml-4\">\r\n                  <p class=\"text-sm font-medium text-gray-400\">Owned Servers</p>\r\n                  <p class=\"text-2xl font-bold text-white\">${this.guilds.filter(g => g.owner).length}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n              <div class=\"flex items-center\">\r\n                <div class=\"p-3 bg-discord-yellow/20 rounded-lg\">\r\n                  <svg class=\"w-6 h-6 text-discord-yellow\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fill-rule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clip-rule=\"evenodd\"/>\r\n                  </svg>\r\n                </div>\r\n                <div class=\"ml-4\">\r\n                  <p class=\"text-sm font-medium text-gray-400\">Bot Status</p>\r\n                  <p class=\"text-2xl font-bold text-white\">Online</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Servers Section -->\r\n          <div class=\"mb-8\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-2xl font-bold text-white\">Your Servers</h3>\r\n              <div class=\"flex space-x-2\">\r\n                <button id=\"refresh-btn\" class=\"px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg transition-colors flex items-center space-x-2\">\r\n                  <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fill-rule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clip-rule=\"evenodd\"/>\r\n                  </svg>\r\n                  <span>Refresh</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" id=\"servers-grid\">\r\n              ${this.renderServers()}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    `\r\n\r\n    this.attachEventListeners()\r\n  }\r\n\r\n  private renderServers(): string {\r\n    if (this.guilds.length === 0) {\r\n      return `\r\n        <div class=\"col-span-full text-center py-12\">\r\n          <div class=\"w-16 h-16 bg-gray-600 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n            <svg class=\"w-8 h-8 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\"/>\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"text-lg font-medium text-gray-300 mb-2\">No servers found</h3>\r\n          <p class=\"text-gray-400\">You don't have any servers with administrator permissions.</p>\r\n        </div>\r\n      `\r\n    }\r\n\r\n    return this.guilds.map(guild => `\r\n      <div class=\"glass-effect rounded-xl p-6 hover:shadow-lg transition-all duration-200\">\r\n        <div class=\"flex items-center justify-between mb-4\">\r\n          <div class=\"flex items-center space-x-4\">\r\n            <div class=\"w-12 h-12 bg-gradient-to-br from-discord-blurple to-purple-600 rounded-full flex items-center justify-center\">\r\n              ${guild.icon ? \r\n                `<img src=\"https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png\" alt=\"${guild.name}\" class=\"w-12 h-12 rounded-full\">` :\r\n                `<span class=\"text-white font-bold text-lg\">${guild.name.charAt(0).toUpperCase()}</span>`\r\n              }\r\n            </div>\r\n            <div>\r\n              <h3 class=\"text-lg font-semibold text-white\">${guild.name}</h3>\r\n              <p class=\"text-sm text-gray-400\">${guild.owner ? 'Owner' : 'Administrator'}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            ${guild.botInGuild ? \r\n              `<span class=\"px-2 py-1 bg-discord-green/20 text-discord-green text-xs rounded-full\">Bot Online</span>` :\r\n              `<span class=\"px-2 py-1 bg-discord-red/20 text-discord-red text-xs rounded-full\">Bot Offline</span>`\r\n            }\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"space-y-3\">\r\n          ${guild.botInGuild ? \r\n            `<a href=\"#\" class=\"view-dashboard-link block w-full px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium text-center transition-colors\" data-guild-id=\"${guild.id}\">View Dashboard</a>` :\r\n            `<button class=\"invite-btn w-full px-4 py-2 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium transition-colors\" data-guild-id=\"${guild.id}\" data-guild-name=\"${guild.name}\">Invite Velari</button>`\r\n          }\r\n        </div>\r\n      </div>\r\n    `).join('')\r\n  }\r\n\r\n  private attachEventListeners(): void {\r\n    const logoutBtn = this.container.querySelector('#logout-btn')\r\n    if (logoutBtn) {\r\n      logoutBtn.addEventListener('click', () => {\r\n        localStorage.removeItem('discord_token')\r\n        this.onLogout()\r\n      })\r\n    }\r\n\r\n    const refreshBtn = this.container.querySelector('#refresh-btn')\r\n    if (refreshBtn) {\r\n      refreshBtn.addEventListener('click', async () => {\r\n        await this.loadUserData()\r\n        this.render()\r\n      })\r\n    }\r\n\r\n    const inviteBtns = this.container.querySelectorAll('.invite-btn')\r\n    inviteBtns.forEach(btn => {\r\n      btn.addEventListener('click', (e) => {\r\n        const button = e.currentTarget as HTMLElement\r\n        const guildId = button.getAttribute('data-guild-id')\r\n        const guildName = button.getAttribute('data-guild-name')\r\n        if (guildId) {\r\n          this.handleInviteBot(guildId, guildName || '')\r\n        }\r\n      })\r\n    })\r\n\r\n    // Add event listeners for view dashboard buttons\r\n    const viewDashboardBtns = this.container.querySelectorAll('.view-dashboard-link')\r\n    viewDashboardBtns.forEach(btn => {\r\n      btn.addEventListener('click', (e) => {\r\n        e.preventDefault()\r\n        const link = e.currentTarget as HTMLElement\r\n        const guildId = link.getAttribute('data-guild-id')\r\n        if (guildId) {\r\n          this.renderServerDashboard(guildId, 'home')\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  private handleInviteBot(guildId: string, guildName: string): void {\r\n    const inviteUrl = this.discordAPI.getBotInviteUrl(guildId)\r\n    window.open(inviteUrl, '_blank')\r\n    \r\n    // Show success message\r\n    this.showNotification(`Invite link generated for ${guildName}!`, 'success')\r\n\r\n    // Add a delay and refresh to check if the bot was added\r\n    setTimeout(async () => {\r\n      await this.loadUserData()\r\n      this.render()\r\n    }, 5000) // Wait 5 seconds before checking\r\n  }\r\n\r\n  private showNotification(message: string, type: 'success' | 'error' = 'success'): void {\r\n    const notification = document.createElement('div')\r\n    notification.className = `fixed top-4 right-4 px-6 py-4 rounded-lg text-white font-medium z-50 transition-all duration-300 ${\r\n      type === 'success' ? 'bg-discord-green' : 'bg-discord-red'\r\n    }`\r\n    notification.textContent = message\r\n    \r\n    document.body.appendChild(notification)\r\n    \r\n    setTimeout(() => {\r\n      notification.remove()\r\n    }, 3000)\r\n  }\r\n\r\n  // Render a simple server dashboard for the selected guild\r\n  private async renderServerDashboard(guildId: string, activePage = 'home'): Promise<void> {\r\n    const guild = this.guilds.find(g => g.id === guildId)\r\n    if (!guild) return\r\n    \r\n    // TODO: Add a way to check if the user is a Velari Admin\r\n    const isVelariAdmin = false;\r\n\r\n    const getPageContent = async () => {\r\n      switch (activePage) {\r\n        case 'home':\r\n          return this.renderDashboardHomePage();\r\n        case 'welcome':\r\n          return await this.renderWelcomeSystemPage(guildId);\r\n        case 'tickets':\r\n          return await this.renderTicketSystemPage(guildId);\r\n        case 'moderation':\r\n          return await this.renderModerationSystemPage(guildId);\r\n        case 'embeds':\r\n          return this.renderEmbedBuilderPage(guildId);\r\n        case 'bot-settings':\r\n          return await this.renderBotSettingsPage(guildId);\r\n        case 'autoroles':\r\n          return await this.renderAutoRolesPage(guildId);\r\n        case 'logs':\r\n          return this.renderLogsAndAnalyticsPage(guildId);\r\n        case 'permissions':\r\n          return this.renderPermissionsPage(guildId);\r\n        case 'keys':\r\n          return this.renderKeyManagementPage(guildId);\r\n        case 'store':\r\n          return this.renderStoreManagementPage();\r\n        case 'storefronts':\r\n          return this.renderCreatorStorefrontsPage(guildId);\r\n        default:\r\n          return this.renderDashboardHomePage();\r\n      }\r\n    }\r\n\r\n    this.container.innerHTML = `\r\n      <div class=\"min-h-screen flex bg-gradient-to-br from-discord-darkest via-discord-dark to-discord-darker text-white\">\r\n        <!-- Sidebar -->\r\n        <aside class=\"w-64 bg-discord-darker text-white flex-shrink-0 p-6\">\r\n          <div class=\"mb-8\">\r\n            <label for=\"server-switcher-select\" class=\"text-sm text-gray-400 mb-2 block\">Current Server</label>\r\n            <select id=\"server-switcher-select\" name=\"server-switcher\" class=\"w-full bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\">\r\n              ${this.guilds.map(g => `<option value=\"${g.id}\" ${g.id === guild.id ? 'selected' : ''}>${g.name}</option>`).join('')}\r\n            </select>\r\n          </div>\r\n          <nav class=\"space-y-2\">\r\n            <a href=\"#\" data-page=\"home\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'home' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🏠</span>\r\n              <span>Dashboard Home</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"welcome\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'welcome' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>👋</span>\r\n              <span>Welcome System</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"tickets\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'tickets' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🎫</span>\r\n              <span>Ticket System</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"moderation\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'moderation' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🛡️</span>\r\n              <span>Moderation System</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"embeds\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'embeds' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>📝</span>\r\n              <span>Embed Builder</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"bot-settings\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'bot-settings' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🤖</span>\r\n              <span>Bot Settings</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"autoroles\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'autoroles' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🎭</span>\r\n              <span>Auto Roles & Reaction Roles</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"logs\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'logs' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>📊</span>\r\n              <span>Logs & Analytics</span>\r\n            </a>\r\n            <a href=\"#\" data-page=\"permissions\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'permissions' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🔑</span>\r\n              <span>Permission Management</span>\r\n            </a>\r\n             <a href=\"#\" data-page=\"keys\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'keys' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n              <span>🔐</span>\r\n              <span>Key Management</span>\r\n            </a>\r\n            ${isVelariAdmin ? `\r\n              <a href=\"#\" data-page=\"store\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'store' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n                <span>💰</span>\r\n                <span>Store & Payment Management</span>\r\n                <span class=\"text-xs bg-red-600 px-2 py-1 rounded-full\">Admin</span>\r\n              </a>\r\n            ` : ''}\r\n             ${guild.owner ? `\r\n              <a href=\"#\" data-page=\"storefronts\" class=\"flex items-center space-x-3 px-3 py-2 rounded-lg ${activePage === 'storefronts' ? 'bg-white/10 text-white' : 'hover:bg-white/10'}\">\r\n                <span>🛍️</span>\r\n                <span>Creator Storefronts</span>\r\n                 <span class=\"text-xs bg-discord-green px-2 py-1 rounded-full\">Owner</span>\r\n              </a>\r\n            ` : ''}\r\n          </nav>\r\n        </aside>\r\n\r\n        <div class=\"flex-1 flex flex-col\">\r\n          <!-- Header -->\r\n          <header class=\"glass-effect border-b border-white/10\">\r\n            <div class=\"flex justify-between items-center py-4 px-4 sm:px-6 lg:px-8\">\r\n              <div class=\"flex items-center space-x-4\">\r\n                 <button id=\"mobile-menu-btn\" class=\"md:hidden p-2 rounded-md hover:bg-white/10\">\r\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\"></path></svg>\r\n                </button>\r\n                <h1 class=\"text-2xl font-bold text-white\">${guild.name} Dashboard</h1>\r\n              </div>\r\n              <div class=\"flex items-center\">\r\n                 <button id=\"back-to-servers\" class=\"px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg transition-colors flex items-center space-x-2\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\r\n                    </svg>\r\n                    <span>Back to Servers</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <!-- Main Content -->\r\n          <main class=\"flex-1 overflow-y-auto p-8\">\r\n            ${await getPageContent()}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    this.attachServerDashboardEventListeners(guildId, activePage);\r\n  }\r\n\r\n  private renderDashboardHomePage(): string {\r\n    return `\r\n      <div class=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\r\n        <!-- Server Overview -->\r\n        <div class=\"lg:col-span-12 glass-effect rounded-xl p-6\">\r\n          <h2 class=\"text-2xl font-bold text-white mb-6\">Server Overview</h2>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div class=\"bg-discord-dark/50 rounded-lg p-4 flex items-center\">\r\n              <div class=\"p-3 bg-discord-green/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-green\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Members</p>\r\n                <p class=\"text-xl font-bold text-white\" id=\"member-count\">Loading...</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"bg-discord-dark/50 rounded-lg p-4 flex items-center\">\r\n              <div class=\"p-3 bg-discord-blurple/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-blurple\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Uptime</p>\r\n                <p class=\"text-xl font-bold text-white\" id=\"bot-uptime\">Loading...</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"bg-discord-dark/50 rounded-lg p-4 flex items-center\">\r\n              <div class=\"p-3 bg-discord-yellow/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-yellow\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zm6-4a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zm6-3a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Commands Used</p>\r\n                <p class=\"text-xl font-bold text-white\" id=\"commands-count\">Loading...</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Quick Module Toggles -->\r\n        <div class=\"lg:col-span-8 glass-effect rounded-xl p-6\">\r\n          <h2 class=\"text-2xl font-bold text-white mb-6\">Quick Module Toggles</h2>\r\n          <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            ${this.renderModuleToggle('welcome', 'Welcome', 'M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6z', 'text-discord-green')}\r\n            ${this.renderModuleToggle('tickets', 'Tickets', 'M2 6a2 2 0 012-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6z', 'text-discord-blurple')}\r\n            ${this.renderModuleToggle('moderation', 'Moderation', 'M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z', 'text-discord-red')}\r\n            ${this.renderModuleToggle('autoroles', 'Auto Roles', 'M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z', 'text-discord-yellow')}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Recent Activity Logs -->\r\n        <div class=\"lg:col-span-4 glass-effect rounded-xl p-6\">\r\n          <h2 class=\"text-2xl font-bold text-white mb-6\">Recent Activity</h2>\r\n          <div class=\"space-y-4\" id=\"activity-logs\">\r\n            <div class=\"animate-pulse\">\r\n              <div class=\"h-4 bg-discord-dark/50 rounded w-3/4\"></div>\r\n              <div class=\"space-y-3 mt-4\">\r\n                <div class=\"h-4 bg-discord-dark/50 rounded\"></div>\r\n                <div class=\"h-4 bg-discord-dark/50 rounded\"></div>\r\n                <div class=\"h-4 bg-discord-dark/50 rounded w-5/6\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private renderModuleToggle(module: string, title: string, iconPath: string, iconClass: string): string {\r\n    return `\r\n      <div class=\"module-toggle bg-discord-dark/50 hover:bg-discord-dark rounded-lg p-4 transition-colors text-left\" data-module=\"${module}\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <svg class=\"w-6 h-6 ${iconClass}\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n            <path d=\"${iconPath}\"/>\r\n          </svg>\r\n          <button class=\"toggle-switch relative inline-flex items-center h-4 w-8 rounded-full transition-colors bg-gray-600\">\r\n            <span class=\"toggle-indicator absolute left-0 inline-block w-4 h-4 transform bg-white rounded-full transition-transform\"></span>\r\n          </button>\r\n        </div>\r\n        <h3 class=\"text-white font-medium\">${title}</h3>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async renderWelcomeSystemPage(guildId: string): Promise<string> {\r\n    const [settings, channels] = await Promise.all([\r\n      this.fetchWelcomeSettings(guildId),\r\n      this.fetchGuildChannels(guildId)\r\n    ]);\r\n    \r\n    const renderToggle = (setting: keyof WelcomeSettings, enabled: boolean) => {\r\n      const isEnabled = settings ? settings[setting] : enabled;\r\n      const settingKey = String(setting);\r\n      return `\r\n        <button class=\"toggle-switch relative inline-flex items-center h-4 w-8 rounded-full transition-colors ${isEnabled ? 'bg-discord-blurple' : 'bg-gray-600'}\" data-setting=\"${settingKey}\">\r\n          <span class=\"toggle-indicator absolute left-0 inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${isEnabled ? 'translate-x-4' : ''}\"></span>\r\n        </button>\r\n      `;\r\n    };\r\n    \r\n    return `\r\n      <div class=\"space-y-8\">\r\n        <!-- Header -->\r\n        <div>\r\n          <h2 class=\"text-3xl font-bold text-white\">Welcome System</h2>\r\n          <p class=\"text-gray-400 mt-1\">Customize how new members are welcomed to your server.</p>\r\n        </div>\r\n\r\n        <!-- General Settings -->\r\n        <div class=\"glass-effect rounded-xl\">\r\n          <div class=\"p-6\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 class=\"text-lg font-semibold text-white\">Enable Welcome Messages</h3>\r\n                <p class=\"text-sm text-gray-400\">Send a message when a new member joins the server.</p>\r\n              </div>\r\n              ${renderToggle('enabled', false)}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"border-t border-white/10 p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-2\">Welcome Channel</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">Select the channel where welcome messages will be sent.</p>\r\n            <select id=\"welcome-channel-select\" class=\"w-full md:w-1/2 bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\">\r\n              ${channels.filter(c => c.type === 0).map(c => `<option value=\"${c.id}\" ${settings?.channelId === c.id ? 'selected' : ''}>#${c.name}</option>`).join('')}\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"border-t border-white/10 p-6\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 class=\"text-lg font-semibold text-white\">Send Welcome in DMs</h3>\r\n                <p class=\"text-sm text-gray-400\">Send a copy of the welcome message directly to the new member.</p>\r\n              </div>\r\n              ${renderToggle('dmEnabled', false)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Message Editor -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-2\">Custom Welcome Message</h3>\r\n          <p class=\"text-sm text-gray-400 mb-4\">\r\n            Use variables like <code class=\"bg-black/20 px-1 rounded\">{user}</code>, <code class=\"bg-black/20 px-1 rounded\">{server}</code>, or <code class=\"bg-black/20 px-1 rounded\">{memberCount}</code> to personalize your message.\r\n          </p>\r\n          <textarea id=\"welcome-message-input\" class=\"w-full h-40 bg-discord-dark/50 border border-transparent rounded-lg p-4 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\" placeholder=\"Welcome {user} to {server}! You are the {memberCount}th member!\"></textarea>\r\n        </div>\r\n\r\n        <!-- Welcome Banner -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-2\">Welcome Banner</h3>\r\n          <p class=\"text-sm text-gray-400 mb-4\">Attach a custom image to your welcome message. This can be a URL or an uploaded file.</p>\r\n          <div class=\"flex items-center space-x-4\">\r\n            <input type=\"text\" id=\"welcome-banner-url\" class=\"flex-grow bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\" placeholder=\"https://example.com/banner.png\">\r\n            <label for=\"welcome-banner-upload\" class=\"cursor-pointer px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium transition-colors\">\r\n              Upload Image\r\n            </label>\r\n            <input type=\"file\" id=\"welcome-banner-upload\" class=\"hidden\" accept=\"image/*\">\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Auto Role Assignment -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-2\">Auto Role Assignment</h3>\r\n          <p class=\"text-sm text-gray-400 mb-4\">Automatically assign these roles to new members.</p>\r\n          <div id=\"auto-roles-list\" class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n            <p class=\"text-gray-400\">Loading roles...</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Save Button -->\r\n        <div class=\"flex justify-end mt-8\">\r\n          <button id=\"save-welcome-settings\" class=\"px-6 py-3 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium transition-colors flex items-center space-x-2\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l7-7a1 1 0 00-1.414-1.414L11 12.586l-2.293-2.293z\"/></svg>\r\n            <span>Save Changes</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async renderTicketSystemPage(guildId: string): Promise<string> {\r\n    const [settings, channels, roles] = await Promise.all([\r\n      this.fetchTicketSettings(guildId),\r\n      this.fetchGuildChannels(guildId),\r\n      this.fetchGuildRoles(guildId)\r\n    ]);\r\n    \r\n    const categories = channels.filter(c => c.type === 4);\r\n    const textChannels = channels.filter(c => c.type === 0);\r\n\r\n    const renderToggle = (setting: keyof TicketSettings, enabled: boolean) => {\r\n      const isEnabled = settings ? settings[setting] : enabled;\r\n      const settingKey = String(setting);\r\n      return `\r\n        <button class=\"toggle-switch relative inline-flex items-center h-4 w-8 rounded-full transition-colors ${isEnabled ? 'bg-discord-blurple' : 'bg-gray-600'}\" data-setting=\"${settingKey}\">\r\n          <span class=\"toggle-indicator absolute left-0 inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${isEnabled ? 'translate-x-4' : ''}\"></span>\r\n        </button>\r\n      `;\r\n    };\r\n\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n        <!-- Header -->\r\n        <div>\r\n          <h2 class=\"text-3xl font-bold text-white\">Ticket System</h2>\r\n          <p class=\"text-gray-400 mt-1\">Manage your server's support ticket system.</p>\r\n        </div>\r\n  \r\n        <!-- General Settings -->\r\n        <div class=\"glass-effect rounded-xl\">\r\n          <div class=\"p-6\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 class=\"text-lg font-semibold text-white\">Enable Ticket System</h3>\r\n                <p class=\"text-sm text-gray-400\">Allow members to create support tickets.</p>\r\n              </div>\r\n              ${renderToggle('enabled', true)}\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"border-t border-white/10 p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-2\">Ticket Category</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">Select the category where new ticket channels will be created.</p>\r\n            <select id=\"ticket-category-select\" class=\"w-full md:w-1/2 bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\">\r\n              ${categories.map(c => `<option value=\"${c.id}\" ${settings?.categoryId === c.id ? 'selected' : ''}>${c.name}</option>`).join('')}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Staff Roles -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-2\">Staff Roles</h3>\r\n          <p class=\"text-sm text-gray-400 mb-4\">These roles will have permission to view and manage tickets.</p>\r\n          <div id=\"staff-roles-list\" class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n            ${roles.map(role => `\r\n              <label class=\"flex items-center space-x-3 cursor-pointer\">\r\n                <input type=\"checkbox\" class=\"form-checkbox h-5 w-5 rounded bg-discord-dark/50 border-white/20 text-discord-blurple focus:ring-discord-blurple/50\" data-role-id=\"${role.id}\" ${settings?.staffRoleIds.includes(role.id) ? 'checked' : ''}>\r\n                <span class=\"text-white\" style=\"color: #${role.color.toString(16).padStart(6, '0')}\">${role.name}</span>\r\n              </label>\r\n            `).join('')}\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Ticket Reasons -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-2\">Ticket Reason Buttons</h3>\r\n          <p class=\"text-sm text-gray-400 mb-4\">Configure the buttons users click to open a ticket. (e.g., \"Bug Report\", \"User Report\")</p>\r\n          <div id=\"ticket-reasons-list\" class=\"space-y-3\">\r\n            ${settings?.reasons.map((reason: {id: string, label: string, emoji: string}) => `\r\n              <div class=\"flex items-center space-x-3\" data-reason-id=\"${reason.id}\">\r\n                <input type=\"text\" class=\"reason-emoji w-16 bg-discord-dark/50 rounded-lg px-3 py-2 text-center\" value=\"${reason.emoji}\">\r\n                <input type=\"text\" class=\"reason-label flex-grow bg-discord-dark/50 rounded-lg px-3 py-2\" value=\"${reason.label}\">\r\n                <button class=\"remove-reason-btn p-2 text-gray-400 hover:text-white hover:bg-red-600/50 rounded-full transition-colors\">\r\n                  <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\r\n                </button>\r\n              </div>\r\n            `).join('') || '<p class=\"text-gray-400\">No reasons configured.</p>'}\r\n          </div>\r\n          <button id=\"add-ticket-reason\" class=\"mt-4 px-4 py-2 bg-discord-dark/50 hover:bg-discord-dark text-white rounded-lg transition-colors text-sm\">Add Reason</button>\r\n        </div>\r\n  \r\n        <!-- Closing & Transcripts -->\r\n        <div class=\"glass-effect rounded-xl\">\r\n          <div class=\"p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-2\">Close Message</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">This message will be sent when a ticket is closed.</p>\r\n            <textarea id=\"ticket-close-message\" class=\"w-full h-24 bg-discord-dark/50 border border-transparent rounded-lg p-4 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\" placeholder=\"Your ticket has been closed by a staff member.\">${settings?.closeMessage || ''}</textarea>\r\n          </div>\r\n          <div class=\"border-t border-white/10 p-6\">\r\n             <div class=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 class=\"text-lg font-semibold text-white\">Enable Transcripts</h3>\r\n                  <p class=\"text-sm text-gray-400\">Save a transcript when a ticket is closed.</p>\r\n                </div>\r\n                ${renderToggle('transcriptsEnabled', false)}\r\n            </div>\r\n          </div>\r\n          <div class=\"border-t border-white/10 p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-2\">Transcript Channel</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">Select a channel to send transcripts to. (Requires transcripts to be enabled)</p>\r\n            <select id=\"transcript-channel-select\" class=\"w-full md:w-1/2 bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\">\r\n              ${textChannels.map(c => `<option value=\"${c.id}\" ${settings?.transcriptChannelId === c.id ? 'selected' : ''}>#${c.name}</option>`).join('')}\r\n            </select>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Save Button -->\r\n        <div class=\"flex justify-end mt-8\">\r\n          <button id=\"save-ticket-settings\" class=\"px-6 py-3 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium transition-colors flex items-center space-x-2\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l7-7a1 1 0 00-1.414-1.414L11 12.586l-2.293-2.293z\"/></svg>\r\n            <span>Save Changes</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async fetchTicketSettings(guildId: string): Promise<TicketSettings | null> {\r\n    try {\r\n      const resp = await fetch(`/api/ticket-settings?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch ticket settings');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch ticket settings\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private attachTicketSystemEventListeners(): void {\r\n    const container = document.querySelector('.space-y-8[data-guild-id]');\r\n    if (!container) return;\r\n    const guildId = (container as HTMLElement).dataset.guildId;\r\n  \r\n    // Event listeners for toggle switches\r\n    container.querySelectorAll('.toggle-switch').forEach(button => {\r\n      button.addEventListener('click', () => {\r\n        const indicator = button.querySelector('.toggle-indicator') as HTMLSpanElement;\r\n        const isEnabled = button.classList.toggle('bg-discord-blurple');\r\n        button.classList.toggle('bg-gray-600', !isEnabled);\r\n        indicator.classList.toggle('translate-x-4', !isEnabled);\r\n      });\r\n    });\r\n  \r\n    // Event listener for Save button\r\n    const saveButton = container.querySelector('#save-ticket-settings');\r\n    if (saveButton) {\r\n      saveButton.addEventListener('click', async () => {\r\n        if (!guildId) return;\r\n        const reasons = Array.from(container.querySelectorAll('#ticket-reasons-list > div')).map(div => {\r\n          return {\r\n            id: (div as HTMLElement).dataset.reasonId,\r\n            emoji: (div.querySelector('.reason-emoji') as HTMLInputElement).value,\r\n            label: (div.querySelector('.reason-label') as HTMLInputElement).value,\r\n          }\r\n        });\r\n        \r\n        const settings = {\r\n          enabled: container.querySelector('[data-setting=\"enabled\"]')?.classList.contains('bg-discord-blurple'),\r\n          categoryId: (container.querySelector('#ticket-category-select') as HTMLSelectElement).value,\r\n          staffRoleIds: Array.from(container.querySelectorAll('#staff-roles-list input:checked')).map(el => (el as HTMLElement).dataset.roleId),\r\n          reasons: reasons,\r\n          closeMessage: (container.querySelector('#ticket-close-message') as HTMLTextAreaElement).value,\r\n          transcriptsEnabled: container.querySelector('[data-setting=\"transcriptsEnabled\"]')?.classList.contains('bg-discord-blurple'),\r\n          transcriptChannelId: (container.querySelector('#transcript-channel-select') as HTMLSelectElement).value\r\n        };\r\n  \r\n        try {\r\n          const response = await fetch(`/api/ticket-settings?guildId=${guildId}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(settings)\r\n          });\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            this.showNotification('Ticket settings saved successfully!', 'success');\r\n          } else {\r\n            throw new Error(result.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to save ticket settings:', error);\r\n          this.showNotification('Failed to save settings.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private async fetchWelcomeSettings(guildId: string): Promise<WelcomeSettings | null> {\r\n    try {\r\n      const resp = await fetch(`/api/welcome-settings?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch settings');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch welcome settings\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchGuildChannels(guildId: string): Promise<GuildChannel[]> {\r\n    try {\r\n      const resp = await fetch(`/api/guild-channels?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch channels');\r\n      return await resp.json();\r\n    } catch(e) {\r\n      console.error(\"Failed to fetch guild channels\", e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private async fetchGuildRoles(guildId: string): Promise<GuildRole[]> {\r\n    try {\r\n      const resp = await fetch(`/api/guild-roles?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch roles');\r\n      return await resp.json();\r\n    } catch(e) {\r\n      console.error(\"Failed to fetch guild roles\", e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private attachWelcomeSystemEventListeners(): void {\r\n    const container = document.querySelector('.space-y-8[data-guild-id]');\r\n    if (!container) return;\r\n    const guildId = (container as HTMLElement).dataset.guildId;\r\n\r\n    // Event listeners for toggle switches\r\n    container.querySelectorAll('.toggle-switch').forEach(button => {\r\n      button.addEventListener('click', () => {\r\n        const indicator = button.querySelector('.toggle-indicator') as HTMLSpanElement;\r\n        const isEnabled = button.classList.toggle('bg-discord-blurple');\r\n        button.classList.toggle('bg-gray-600', !isEnabled);\r\n        indicator.classList.toggle('translate-x-4', !isEnabled);\r\n      });\r\n    });\r\n\r\n    // Event listener for Save button\r\n    const saveButton = container.querySelector('#save-welcome-settings');\r\n    if (saveButton) {\r\n      saveButton.addEventListener('click', async () => {\r\n        if (!guildId) return;\r\n        const settings = {\r\n          enabled: container.querySelector('[data-setting=\"enabled\"]')?.classList.contains('bg-discord-blurple'),\r\n          channelId: (container.querySelector('#welcome-channel-select') as HTMLSelectElement).value,\r\n          dmEnabled: container.querySelector('[data-setting=\"dmEnabled\"]')?.classList.contains('bg-discord-blurple'),\r\n          message: (container.querySelector('#welcome-message-input') as HTMLTextAreaElement).value,\r\n          bannerUrl: (container.querySelector('#welcome-banner-url') as HTMLInputElement).value,\r\n          autoRoleIds: Array.from(container.querySelectorAll('#auto-roles-list input:checked')).map(el => (el as HTMLElement).dataset.roleId)\r\n        };\r\n\r\n        try {\r\n          const response = await fetch(`/api/welcome-settings?guildId=${guildId}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(settings)\r\n          });\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            this.showNotification('Welcome settings saved successfully!', 'success');\r\n          } else {\r\n            throw new Error(result.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to save welcome settings:', error);\r\n          this.showNotification('Failed to save settings.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private attachServerDashboardEventListeners(guildId: string, activePage: string): void {\r\n    // Common Listeners for the server dashboard shell\r\n    const backBtn = this.container.querySelector('#back-to-servers');\r\n    if (backBtn) {\r\n      backBtn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.render();\r\n      });\r\n    }\r\n\r\n    const serverSwitcherSelect = this.container.querySelector('#server-switcher-select') as HTMLSelectElement;\r\n    if (serverSwitcherSelect) {\r\n      serverSwitcherSelect.addEventListener('change', (e) => {\r\n        const newGuildId = (e.target as HTMLSelectElement).value;\r\n        if (newGuildId) {\r\n          this.renderServerDashboard(newGuildId, activePage);\r\n        }\r\n      });\r\n    }\r\n\r\n    const sidebarLinks = this.container.querySelectorAll('aside nav a');\r\n    sidebarLinks.forEach(link => {\r\n      link.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        const page = (e.currentTarget as HTMLElement).dataset.page;\r\n        if (page) {\r\n          this.renderServerDashboard(guildId, page);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Page-specific listeners\r\n    if (activePage === 'home') {\r\n      // Load initial data\r\n      this.updateDashboardStats(guildId);\r\n      this.loadActivityLogs(guildId);\r\n\r\n      // Handle module toggles\r\n      document.querySelectorAll('.module-toggle').forEach(container => {\r\n        container.addEventListener('click', async (e) => {\r\n          const moduleContainer = e.currentTarget as HTMLDivElement;\r\n          const moduleName = moduleContainer.dataset.module;\r\n          const toggleButton = moduleContainer.querySelector('.toggle-switch') as HTMLButtonElement;\r\n          const toggleIndicator = moduleContainer.querySelector('.toggle-indicator') as HTMLSpanElement;\r\n\r\n          const isEnabled = toggleButton.classList.contains('bg-discord-blurple');\r\n\r\n          try {\r\n            const response = await fetch(`/api/toggle-module`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('discord_token')}`\r\n              },\r\n              body: JSON.stringify({\r\n                guildId,\r\n                module: moduleName,\r\n                enabled: !isEnabled\r\n              })\r\n            });\r\n\r\n            if (!response.ok) {\r\n              throw new Error('Failed to toggle module');\r\n            }\r\n            \r\n            // Toggle visual state\r\n            toggleButton.classList.toggle('bg-gray-600', isEnabled);\r\n            toggleButton.classList.toggle('bg-discord-blurple', !isEnabled);\r\n            toggleIndicator.classList.toggle('translate-x-4', !isEnabled);\r\n\r\n            this.showNotification(`${moduleName} module ${!isEnabled ? 'enabled' : 'disabled'}`);\r\n            \r\n          } catch (error) {\r\n            console.error('Error toggling module:', error);\r\n            this.showNotification('Failed to toggle module', 'error');\r\n          }\r\n        });\r\n      });\r\n\r\n      // Refresh stats periodically\r\n      const statsInterval = setInterval(() => {\r\n        this.updateDashboardStats(guildId);\r\n      }, 30000); // Update every 30 seconds\r\n\r\n      // Refresh logs periodically\r\n      const logsInterval = setInterval(() => {\r\n        this.loadActivityLogs(guildId);\r\n      }, 10000); // Update every 10 seconds\r\n\r\n      // Clean up intervals when navigating away\r\n      const originalRender = this.render.bind(this);\r\n      this.render = () => {\r\n        clearInterval(statsInterval);\r\n        clearInterval(logsInterval);\r\n        originalRender();\r\n      }\r\n    } else if (activePage === 'welcome') {\r\n      this.attachWelcomeSystemEventListeners();\r\n    } else if (activePage === 'tickets') {\r\n      this.attachTicketSystemEventListeners();\r\n    } else if (activePage === 'moderation') {\r\n      this.attachModerationSystemEventListeners();\r\n    } else if (activePage === 'bot-settings') {\r\n      this.attachBotSettingsEventListeners();\r\n    } else if (activePage === 'autoroles') {\r\n      this.attachAutoRolesEventListeners();\r\n    } else if (activePage === 'logs') {\r\n      this.attachLogsAndAnalyticsEventListeners(guildId);\r\n    } else if (activePage === 'permissions') {\r\n      this.attachPermissionsEventListeners(guildId);\r\n    } else if (activePage === 'keys') {\r\n        this.attachKeyManagementEventListeners(guildId);\r\n    } else if (activePage === 'store') {\r\n        this.attachStoreManagementEventListeners();\r\n    } else if (activePage === 'storefronts') {\r\n        this.attachCreatorStorefrontsEventListeners(guildId);\r\n    }\r\n  }\r\n\r\n  private async updateDashboardStats(guildId: string): Promise<void> {\r\n    try {\r\n      // Fetch server stats from the API\r\n      const response = await fetch(`/api/server-stats?guildId=${guildId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('discord_token')}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch server stats');\r\n      }\r\n\r\n      const stats = await response.json();\r\n      \r\n      // Update the stats in the UI\r\n      const memberCountEl = document.getElementById('member-count');\r\n      const botUptimeEl = document.getElementById('bot-uptime');\r\n      const commandsCountEl = document.getElementById('commands-count');\r\n      \r\n      if (memberCountEl) memberCountEl.textContent = stats.memberCount.toLocaleString();\r\n      if (botUptimeEl) botUptimeEl.textContent = stats.uptime;\r\n      if (commandsCountEl) commandsCountEl.textContent = stats.commandsUsed.toLocaleString();\r\n\r\n    } catch (error) {\r\n      console.error('Error updating dashboard stats:', error);\r\n      this.showNotification('Failed to load server statistics', 'error');\r\n    }\r\n  }\r\n\r\n  private async loadActivityLogs(guildId: string): Promise<void> {\r\n    try {\r\n      // Fetch recent activity logs from the API\r\n      const response = await fetch(`/api/activity-logs?guildId=${guildId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('discord_token')}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch activity logs');\r\n      }\r\n\r\n      const logs = await response.json();\r\n      const logsContainer = document.getElementById('activity-logs');\r\n      \r\n      if (logsContainer) {\r\n        logsContainer.innerHTML = logs.map((log: any) => `\r\n          <div class=\"bg-discord-dark/50 rounded-lg p-4\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <span class=\"text-sm text-gray-400\">${new Date(log.timestamp).toLocaleString()}</span>\r\n              <span class=\"px-2 py-1 text-xs rounded-full ${\r\n                log.type === 'warning' ? 'bg-discord-yellow/20 text-discord-yellow' :\r\n                log.type === 'error' ? 'bg-discord-red/20 text-discord-red' :\r\n                'bg-discord-green/20 text-discord-green'\r\n              }\">${log.type}</span>\r\n            </div>\r\n            <p class=\"text-white mt-2\">${log.message}</p>\r\n          </div>\r\n        `).join('');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error loading activity logs:', error);\r\n      this.showNotification('Failed to load activity logs', 'error');\r\n    }\r\n  }\r\n\r\n  private async renderModerationSystemPage(guildId: string): Promise<string> {\r\n    const [settings, channels, roles] = await Promise.all([\r\n      this.fetchModerationSettings(guildId),\r\n      this.fetchGuildChannels(guildId),\r\n      this.fetchGuildRoles(guildId)\r\n    ]);\r\n\r\n    const renderToggle = (setting: keyof ModerationSettings, enabled: boolean) => {\r\n      const isEnabled = settings ? settings[setting] : enabled;\r\n      const settingKey = String(setting);\r\n      return `\r\n        <button class=\"toggle-switch relative inline-flex items-center h-4 w-8 rounded-full transition-colors ${isEnabled ? 'bg-discord-blurple' : 'bg-gray-600'}\" data-setting=\"${settingKey}\">\r\n          <span class=\"toggle-indicator absolute left-0 inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${isEnabled ? 'translate-x-4' : ''}\"></span>\r\n        </button>\r\n      `;\r\n    };\r\n    \r\n    const textChannels = channels.filter(c => c.type === 0);\r\n\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n        <!-- Header -->\r\n        <div>\r\n          <h2 class=\"text-3xl font-bold text-white\">Moderation System</h2>\r\n          <p class=\"text-gray-400 mt-1\">Configure automated moderation and manage server rules.</p>\r\n        </div>\r\n  \r\n        <!-- Logging & Mute Role -->\r\n        <div class=\"glass-effect rounded-xl\">\r\n          <div class=\"p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-2\">Action Logging Channel</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">Select a channel where all moderation actions will be logged.</p>\r\n            <select id=\"mod-log-channel-select\" class=\"w-full md:w-1/2 bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\">\r\n              ${textChannels.map(c => `<option value=\"${c.id}\" ${settings?.logChannelId === c.id ? 'selected' : ''}>#${c.name}</option>`).join('')}\r\n            </select>\r\n          </div>\r\n          <div class=\"border-t border-white/10 p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-2\">Mute Role</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">Select the role to be used for muting members. The bot will need permissions to manage this role.</p>\r\n            <select id=\"mute-role-select\" class=\"w-full md:w-1/2 bg-discord-dark/50 border border-transparent rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\">\r\n              ${roles.map(r => `<option value=\"${r.id}\" ${settings?.muteRoleId === r.id ? 'selected' : ''}>${r.name}</option>`).join('')}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Auto Moderation -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Auto Moderation</h3>\r\n          <div class=\"space-y-4\">\r\n            <div class=\"flex items-center justify-between p-4 bg-discord-dark/50 rounded-lg\">\r\n              <div>\r\n                <h4 class=\"font-medium text-white\">Anti-Spam</h4>\r\n                <p class=\"text-sm text-gray-400\">Detect and prevent rapid messaging and message floods.</p>\r\n              </div>\r\n              ${renderToggle('antiSpamEnabled', false)}\r\n            </div>\r\n            <div class=\"flex items-center justify-between p-4 bg-discord-dark/50 rounded-lg\">\r\n              <div>\r\n                <h4 class=\"font-medium text-white\">Raid Protection</h4>\r\n                <p class=\"text-sm text-gray-400\">Automatically lock down the server if a large number of joins is detected.</p>\r\n              </div>\r\n              ${renderToggle('raidProtectionEnabled', false)}\r\n            </div>\r\n            <div>\r\n              <h4 class=\"font-medium text-white mt-4\">Banned Words Filter</h4>\r\n              <p class=\"text-sm text-gray-400 mb-2\">Automatically delete messages containing these words (comma-separated).</p>\r\n              <textarea id=\"banned-words-list\" class=\"w-full h-24 bg-discord-dark/50 border border-transparent rounded-lg p-4 text-white focus:outline-none focus:ring-2 focus:ring-discord-blurple\" placeholder=\"word1, phrase two, another one\">${settings?.bannedWords.join(', ') || ''}</textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Strike System -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Strike System</h3>\r\n          <p class=\"text-sm text-gray-400 mb-4\">Automatically punish members after they receive a certain number of warnings (strikes).</p>\r\n          <div class=\"space-y-4\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <label for=\"strike-action-1\" class=\"text-gray-300\">After 3 strikes:</label>\r\n              <select id=\"strike-action-1\" class=\"w-1/2 bg-discord-dark/50 rounded-lg px-4 py-2\" data-strikes=\"3\">\r\n                <option value=\"none\" ${settings?.strikeActions['3'] === 'none' ? 'selected' : ''}>None</option>\r\n                <option value=\"timeout-10m\" ${settings?.strikeActions['3'] === 'timeout-10m' ? 'selected' : ''}>Timeout (10 Minutes)</option>\r\n                <option value=\"kick\" ${settings?.strikeActions['3'] === 'kick' ? 'selected' : ''}>Kick</option>\r\n                <option value=\"ban\" ${settings?.strikeActions['3'] === 'ban' ? 'selected' : ''}>Ban</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"flex items-center justify-between\">\r\n              <label for=\"strike-action-2\" class=\"text-gray-300\">After 5 strikes:</label>\r\n              <select id=\"strike-action-2\" class=\"w-1/2 bg-discord-dark/50 rounded-lg px-4 py-2\" data-strikes=\"5\">\r\n                <option value=\"none\" ${settings?.strikeActions['5'] === 'none' ? 'selected' : ''}>None</option>\r\n                <option value=\"timeout-1h\" ${settings?.strikeActions['5'] === 'timeout-1h' ? 'selected' : ''}>Timeout (1 Hour)</option>\r\n                <option value=\"kick\" ${settings?.strikeActions['5'] === 'kick' ? 'selected' : ''}>Kick</option>\r\n                <option value=\"ban\" ${settings?.strikeActions['5'] === 'ban' ? 'selected' : ''}>Ban</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Save Button -->\r\n        <div class=\"flex justify-end mt-8\">\r\n          <button id=\"save-moderation-settings\" class=\"px-6 py-3 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium transition-colors flex items-center space-x-2\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l7-7a1 1 0 00-1.414-1.414L11 12.586l-2.293-2.293z\"/></svg>\r\n            <span>Save Changes</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async fetchModerationSettings(guildId: string): Promise<ModerationSettings | null> {\r\n    try {\r\n      const resp = await fetch(`/api/moderation-settings?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch moderation settings');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch moderation settings\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private attachModerationSystemEventListeners(): void {\r\n    const container = document.querySelector('.space-y-8[data-guild-id]');\r\n    if (!container) return;\r\n    const guildId = (container as HTMLElement).dataset.guildId;\r\n  \r\n    // --- Event listeners for toggle switches ---\r\n    container.querySelectorAll('.toggle-switch').forEach(button => {\r\n      button.addEventListener('click', () => {\r\n        const indicator = button.querySelector('.toggle-indicator') as HTMLSpanElement;\r\n        const isEnabled = button.classList.toggle('bg-discord-blurple');\r\n        button.classList.toggle('bg-gray-600', !isEnabled);\r\n        indicator.classList.toggle('translate-x-4', !isEnabled);\r\n      });\r\n    });\r\n  \r\n    // --- Event listener for Save button ---\r\n    const saveButton = container.querySelector('#save-moderation-settings');\r\n    if (saveButton) {\r\n      saveButton.addEventListener('click', async () => {\r\n        if (!guildId) return;\r\n\r\n        const strikeActions: {[key: string]: string} = {};\r\n        container.querySelectorAll<HTMLSelectElement>('[data-strikes]').forEach(select => {\r\n          strikeActions[select.dataset.strikes!] = select.value;\r\n        });\r\n\r\n        const settings = {\r\n          logChannelId: (container.querySelector('#mod-log-channel-select') as HTMLSelectElement).value,\r\n          muteRoleId: (container.querySelector('#mute-role-select') as HTMLSelectElement).value,\r\n          antiSpamEnabled: container.querySelector('[data-setting=\"antiSpamEnabled\"]')?.classList.contains('bg-discord-blurple'),\r\n          raidProtectionEnabled: container.querySelector('[data-setting=\"raidProtectionEnabled\"]')?.classList.contains('bg-discord-blurple'),\r\n          bannedWords: (container.querySelector('#banned-words-list') as HTMLTextAreaElement).value.split(',').map(w => w.trim()).filter(Boolean),\r\n          strikeActions\r\n        };\r\n  \r\n        try {\r\n          const response = await fetch(`/api/moderation-settings?guildId=${guildId}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(settings)\r\n          });\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            this.showNotification('Moderation settings saved successfully!', 'success');\r\n          } else {\r\n            throw new Error(result.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to save moderation settings:', error);\r\n          this.showNotification('Failed to save settings.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderEmbedBuilderPage(guildId: string): string {\r\n    // NOTE: This is a static UI. Data fetching and event listeners will be added next.\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n          <!-- Header -->\r\n          <div>\r\n              <h2 class=\"text-3xl font-bold text-white\">Embed Builder</h2>\r\n              <p class=\"text-gray-400 mt-1\">Create and send custom embed messages to your server.</p>\r\n          </div>\r\n  \r\n          <!-- Main Builder Layout -->\r\n          <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              <!-- Left Panel: Editor -->\r\n              <div class=\"glass-effect rounded-xl p-6 space-y-6\">\r\n                  <div>\r\n                      <h3 class=\"text-lg font-semibold text-white mb-4\">Embed Content</h3>\r\n                      <div class=\"space-y-4\">\r\n                          <div>\r\n                              <label class=\"block text-sm font-medium text-gray-300 mb-1\">Color</label>\r\n                              <input type=\"color\" id=\"embed-color\" class=\"w-full h-10 p-1 bg-discord-dark/50 rounded-lg\" value=\"#5865F2\">\r\n                          </div>\r\n                          <div>\r\n                              <label for=\"embed-author\" class=\"block text-sm font-medium text-gray-300 mb-1\">Author Text</label>\r\n                              <input type=\"text\" id=\"embed-author\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Author Name\">\r\n                          </div>\r\n                          <div>\r\n                              <label for=\"embed-title\" class=\"block text-sm font-medium text-gray-300 mb-1\">Title</label>\r\n                              <input type=\"text\" id=\"embed-title\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Embed Title\">\r\n                          </div>\r\n                          <div>\r\n                              <label for=\"embed-description\" class=\"block text-sm font-medium text-gray-300 mb-1\">Description</label>\r\n                              <textarea id=\"embed-description\" class=\"w-full h-32 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Embed description... Supports markdown!\"></textarea>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n  \r\n                  <div>\r\n                      <h3 class=\"text-lg font-semibold text-white mb-4\">Embed Fields</h3>\r\n                      <div id=\"embed-fields-list\" class=\"space-y-4\">\r\n                          <!-- Fields will be added dynamically here -->\r\n                      </div>\r\n                      <button id=\"add-embed-field\" class=\"mt-4 px-4 py-2 bg-discord-dark/50 hover:bg-discord-dark text-white rounded-lg transition-colors text-sm\">Add Field</button>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                       <label for=\"embed-footer\" class=\"block text-sm font-medium text-gray-300 mb-1\">Footer Text</label>\r\n                       <input type=\"text\" id=\"embed-footer\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Footer text\">\r\n                  </div>\r\n              </div>\r\n  \r\n              <!-- Right Panel: Preview & Actions -->\r\n              <div class=\"space-y-6\">\r\n                  <!-- Preview -->\r\n                  <div class=\"bg-discord-dark rounded-lg p-4\">\r\n                      <h3 class=\"text-lg font-semibold text-white mb-4\">Live Preview</h3>\r\n                      <div id=\"embed-preview-container\" class=\"bg-discord-darker rounded-lg p-4\">\r\n                          <div id=\"embed-preview\" class=\"flex\">\r\n                              <div id=\"embed-preview-color\" class=\"w-1 bg-discord-blurple rounded-l-lg\"></div>\r\n                              <div class=\"p-4 flex-1\">\r\n                                  <div id=\"embed-preview-author\" class=\"text-sm font-semibold text-white mb-2\" style=\"display: none;\"></div>\r\n                                  <div id=\"embed-preview-title\" class=\"text-xl font-bold text-white mb-2\" style=\"display: none;\"></div>\r\n                                  <div id=\"embed-preview-description\" class=\"text-gray-300 text-sm whitespace-pre-wrap\" style=\"display: none;\"></div>\r\n                                  <div id=\"embed-preview-fields\" class=\"grid grid-cols-1 gap-y-2 mt-4\"></div>\r\n                                  <div id=\"embed-preview-footer\" class=\"text-xs text-gray-400 mt-4 pt-2 border-t border-white/10\" style=\"display: none;\"></div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n  \r\n                  <!-- Actions -->\r\n                  <div class=\"glass-effect rounded-xl p-6\">\r\n                       <h3 class=\"text-lg font-semibold text-white mb-4\">Actions</h3>\r\n                       <div class=\"space-y-4\">\r\n                          <div>\r\n                              <label class=\"block text-sm font-medium text-gray-300 mb-1\">Send to Channel</label>\r\n                              <select id=\"embed-send-channel\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\">\r\n                                  <option>Select a channel...</option>\r\n                              </select>\r\n                          </div>\r\n                          <button id=\"send-embed-btn\" class=\"w-full px-6 py-3 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Send Embed</button>\r\n                          \r\n                          <div class=\"flex items-center space-x-4\">\r\n                              <button id=\"save-template-btn\" class=\"flex-1 px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium\">Save as Template</button>\r\n                              <select id=\"load-template-select\" class=\"flex-1 bg-discord-dark/50 rounded-lg p-2\">\r\n                                  <option>Load a template...</option>\r\n                              </select>\r\n                          </div>\r\n                       </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async renderBotSettingsPage(guildId: string): Promise<string> {\r\n    const settings = await this.fetchBotSettings(guildId);\r\n    \r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n          <!-- Header -->\r\n          <div>\r\n              <h2 class=\"text-3xl font-bold text-white\">Bot Settings</h2>\r\n              <p class=\"text-gray-400 mt-1\">Global settings for how the bot behaves in this server.</p>\r\n          </div>\r\n    \r\n          <!-- Core Settings -->\r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n              <h3 class=\"text-lg font-semibold text-white mb-4\">Core Settings</h3>\r\n              <div class=\"space-y-4\">\r\n                  <div>\r\n                      <label for=\"bot-prefix\" class=\"block text-sm font-medium text-gray-300 mb-1\">Command Prefix</label>\r\n                      <input type=\"text\" id=\"bot-prefix\" class=\"w-full md:w-1/4 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"!\" value=\"${settings?.prefix || ''}\">\r\n                  </div>\r\n                  <div>\r\n                      <label for=\"bot-language\" class=\"block text-sm font-medium text-gray-300 mb-1\">Language</label>\r\n                      <select id=\"bot-language\" class=\"w-full md:w-1/2 bg-discord-dark/50 rounded-lg p-2\">\r\n                          <option value=\"en-US\" ${settings?.language === 'en-US' ? 'selected' : ''}>English (US)</option>\r\n                          <option value=\"es-ES\" ${settings?.language === 'es-ES' ? 'selected' : ''}>Español</option>\r\n                          <option value=\"fr-FR\" ${settings?.language === 'fr-FR' ? 'selected' : ''}>Français</option>\r\n                      </select>\r\n                  </div>\r\n                   <div>\r\n                      <label for=\"bot-timezone\" class=\"block text-sm font-medium text-gray-300 mb-1\">Timezone</label>\r\n                      <select id=\"bot-timezone\" class=\"w-full md:w-1/2 bg-discord-dark/50 rounded-lg p-2\">\r\n                          <option value=\"UTC\" ${settings?.timezone === 'UTC' ? 'selected' : ''}>UTC</option>\r\n                          <option value=\"PST\" ${settings?.timezone === 'PST' ? 'selected' : ''}>Pacific Standard Time</option>\r\n                          <option value=\"EST\" ${settings?.timezone === 'EST' ? 'selected' : ''}>Eastern Standard Time</option>\r\n                      </select>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <!-- Self-Host Settings -->\r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n              <h3 class=\"text-lg font-semibold text-white mb-4\">Appearance (Self-Hosted Only)</h3>\r\n               <div class=\"space-y-4\">\r\n                  <div>\r\n                      <label for=\"bot-name\" class=\"block text-sm font-medium text-gray-300 mb-1\">Bot Name</label>\r\n                      <input type=\"text\" id=\"bot-name\" class=\"w-full md:w-1/2 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Velari\" value=\"${settings?.name || ''}\">\r\n                  </div>\r\n                  <div>\r\n                      <label for=\"bot-avatar\" class=\"block text-sm font-medium text-gray-300 mb-1\">Bot Avatar URL</label>\r\n                      <input type=\"text\" id=\"bot-avatar\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\" placeholder=\"https://example.com/avatar.png\" value=\"${settings?.avatar || ''}\">\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  \r\n          <!-- Command Permissions -->\r\n           <div class=\"glass-effect rounded-xl p-6\">\r\n              <h3 class=\"text-lg font-semibold text-white mb-4\">Command Permissions</h3>\r\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                  <div>\r\n                      <label for=\"command-whitelist\" class=\"block text-sm font-medium text-gray-300 mb-1\">Whitelisted Commands</label>\r\n                      <p class=\"text-xs text-gray-400 mb-2\">Only these commands can be used. (Leave empty to allow all)</p>\r\n                      <textarea id=\"command-whitelist\" class=\"w-full h-32 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"play, skip, queue\">${settings?.commandWhitelist.join(', ') || ''}</textarea>\r\n                  </div>\r\n                   <div>\r\n                      <label for=\"command-blacklist\" class=\"block text-sm font-medium text-gray-300 mb-1\">Blacklisted Commands</label>\r\n                      <p class=\"text-xs text-gray-400 mb-2\">These commands cannot be used.</p>\r\n                      <textarea id=\"command-blacklist\" class=\"w-full h-32 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"ban, kick\">${settings?.commandBlacklist.join(', ') || ''}</textarea>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  \r\n          <!-- Save Button -->\r\n          <div class=\"flex justify-end mt-8\">\r\n              <button id=\"save-bot-settings\" class=\"px-6 py-3 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium transition-colors\">Save Changes</button>\r\n          </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async fetchBotSettings(guildId: string): Promise<BotSettings | null> {\r\n    try {\r\n      const resp = await fetch(`/api/bot-settings?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch bot settings');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch bot settings\", e);\r\n      this.showNotification('Failed to load bot settings.', 'error');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private attachBotSettingsEventListeners(): void {\r\n    const container = this.container.querySelector('.space-y-8[data-guild-id]');\r\n    if (!container) return;\r\n    const guildId = (container as HTMLElement).dataset.guildId;\r\n\r\n    const saveButton = container.querySelector('#save-bot-settings');\r\n    if (saveButton) {\r\n      saveButton.addEventListener('click', async () => {\r\n        if (!guildId) return;\r\n\r\n        const getInputValue = (id: string) => (container.querySelector(`#${id}`) as HTMLInputElement).value;\r\n        const getTextAreaValue = (id: string) => (container.querySelector(`#${id}`) as HTMLTextAreaElement).value;\r\n\r\n        const settings: BotSettings = {\r\n          prefix: getInputValue('bot-prefix'),\r\n          language: getInputValue('bot-language'),\r\n          timezone: getInputValue('bot-timezone'),\r\n          name: getInputValue('bot-name'),\r\n          avatar: getInputValue('bot-avatar'),\r\n          commandWhitelist: getTextAreaValue('command-whitelist').split(',').map(cmd => cmd.trim()).filter(Boolean),\r\n          commandBlacklist: getTextAreaValue('command-blacklist').split(',').map(cmd => cmd.trim()).filter(Boolean),\r\n        };\r\n\r\n        try {\r\n          const response = await fetch(`/api/bot-settings?guildId=${guildId}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(settings)\r\n          });\r\n          const result = await response.json();\r\n          if (result.success) {\r\n            this.showNotification('Bot settings saved successfully!', 'success');\r\n          } else {\r\n            throw new Error(result.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to save bot settings:', error);\r\n          this.showNotification('Failed to save settings.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private async renderAutoRolesPage(guildId: string): Promise<string> {\r\n    const [settings, channels, roles] = await Promise.all([\r\n        this.fetchAutoRolesSettings(guildId),\r\n        this.fetchGuildChannels(guildId),\r\n        this.fetchGuildRoles(guildId)\r\n    ]);\r\n\r\n    const renderMenu = (menu: ReactionRoleMenu) => {\r\n        return `\r\n            <div class=\"bg-discord-dark/50 rounded-lg p-4\" data-menu-id=\"${menu.id}\">\r\n                <input type=\"text\" class=\"w-full bg-transparent text-white text-lg font-semibold mb-2\" value=\"${menu.embedTitle}\">\r\n                <div class=\"space-y-4\">\r\n                    <div>\r\n                        <label class=\"block text-sm font-medium text-gray-300 mb-1\">Channel & Message ID</label>\r\n                        <div class=\"flex space-x-2\">\r\n                            <select class=\"w-1/2 bg-discord-darker rounded-lg p-2\">\r\n                                ${channels.filter(c => c.type === 0).map(c => `<option value=\"${c.id}\" ${c.id === menu.channelId ? 'selected' : ''}>#${c.name}</option>`).join('')}\r\n                            </select>\r\n                            <input type=\"text\" class=\"w-1/2 bg-discord-darker rounded-lg p-2\" placeholder=\"Message ID\" value=\"${menu.messageId}\">\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"block text-sm font-medium text-gray-300 mb-1\">Emoji & Role Mappings</label>\r\n                        <div class=\"space-y-2 reaction-role-mappings\">\r\n                        ${menu.mappings.map(m => `\r\n                            <div class=\"flex items-center space-x-2\">\r\n                                <input type=\"text\" class=\"w-16 bg-discord-darker rounded-lg p-2 text-center\" value=\"${m.emoji}\">\r\n                                <select class=\"flex-grow bg-discord-darker rounded-lg p-2\">\r\n                                    ${roles.map(r => `<option value=\"${r.id}\" ${r.id === m.roleId ? 'selected' : ''}>${r.name}</option>`).join('')}\r\n                                </select>\r\n                                <button class=\"remove-mapping-btn p-2 text-gray-400 hover:text-white hover:bg-red-600/50 rounded-full transition-colors\">\r\n                                    <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\r\n                                </button>\r\n                            </div>\r\n                        `).join('')}\r\n                        </div>\r\n                        <button class=\"add-mapping-btn mt-2 px-3 py-1 bg-discord-darker hover:bg-discord-dark text-white rounded-lg text-sm\">Add Row</button>\r\n                    </div>\r\n                     <div class=\"flex items-center justify-between\">\r\n                        <label class=\"text-sm text-gray-300\">Stack Roles</label>\r\n                        <button class=\"toggle-switch\" data-setting=\"stackRoles\"></button>\r\n                    </div>\r\n                     <div class=\"flex items-center justify-between\">\r\n                        <label class=\"text-sm text-gray-300\">Remove on Un-react</label>\r\n                        <button class=\"toggle-switch\" data-setting=\"removeOnUnreact\"></button>\r\n                    </div>\r\n                </div>\r\n                <button class=\"remove-menu-btn mt-4 w-full text-center py-2 bg-red-600/50 hover:bg-red-600/80 rounded-lg\">Delete Menu</button>\r\n            </div>\r\n        `;\r\n    };\r\n\r\n    return `\r\n        <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n            <!-- Header -->\r\n            <div>\r\n                <h2 class=\"text-3xl font-bold text-white\">Auto Roles & Reaction Roles</h2>\r\n                <p class=\"text-gray-400 mt-1\">Automatically assign roles to new members and create reaction role menus.</p>\r\n            </div>\r\n\r\n            <!-- Auto Role on Join -->\r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n                <div class=\"flex items-center justify-between\">\r\n                    <div>\r\n                        <h3 class=\"text-lg font-semibold text-white\">Auto Role on Join</h3>\r\n                        <p class=\"text-sm text-gray-400\">Assign a role to members as soon as they join the server.</p>\r\n                    </div>\r\n                    <button class=\"toggle-switch relative inline-flex items-center h-4 w-8 rounded-full transition-colors ${settings?.autoRoleOnJoinEnabled ? 'bg-discord-blurple' : 'bg-gray-600'}\" data-setting=\"autoRoleOnJoinEnabled\">\r\n                        <span class=\"toggle-indicator absolute left-0 inline-block w-4 h-4 transform bg-white rounded-full transition-transform ${settings?.autoRoleOnJoinEnabled ? 'translate-x-4' : ''}\"></span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"mt-4\">\r\n                    <label for=\"auto-role-select\" class=\"block text-sm font-medium text-gray-300 mb-1\">Role to Assign</label>\r\n                    <select id=\"auto-role-select\" class=\"w-full md:w-1/2 bg-discord-dark/50 rounded-lg p-2\">\r\n                        <option value=\"\">None</option>\r\n                        ${roles.map(r => `<option value=\"${r.id}\" ${settings?.autoRoleOnJoinId === r.id ? 'selected' : ''}>${r.name}</option>`).join('')}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Reaction Role Menus -->\r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n                <div class=\"flex items-center justify-between mb-4\">\r\n                    <h3 class=\"text-lg font-semibold text-white\">Reaction Role Menus</h3>\r\n                    <button id=\"add-reaction-menu\" class=\"px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium\">Create Menu</button>\r\n                </div>\r\n                <div id=\"reaction-menus-container\" class=\"space-y-6\">\r\n                    ${settings && settings.reactionRoleMenus.length > 0\r\n                        ? settings.reactionRoleMenus.map(renderMenu).join('')\r\n                        : '<p class=\"text-gray-400\">No reaction role menus have been created yet.</p>'\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Save Button -->\r\n            <div class=\"flex justify-end mt-8\">\r\n                <button id=\"save-autoroles-settings\" class=\"px-6 py-3 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium transition-colors\">Save All Changes</button>\r\n            </div>\r\n        </div>\r\n    `;\r\n  }\r\n  \r\n  private async fetchAutoRolesSettings(guildId: string): Promise<AutoRolesSettings | null> {\r\n    try {\r\n        const resp = await fetch(`/api/autoroles-settings?guildId=${guildId}`);\r\n        if (!resp.ok) throw new Error('Failed to fetch auto-roles settings');\r\n        return await resp.json();\r\n    } catch (e) {\r\n        console.error(\"Failed to fetch auto-roles settings\", e);\r\n        this.showNotification('Failed to load auto-roles settings.', 'error');\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private attachAutoRolesEventListeners(): void {\r\n    const container = this.container.querySelector('.space-y-8[data-guild-id]');\r\n    if (!container) return;\r\n    const guildId = (container as HTMLElement).dataset.guildId;\r\n\r\n    // Simplified toggle logic\r\n    container.querySelectorAll('.toggle-switch').forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            const indicator = button.querySelector('.toggle-indicator');\r\n            button.classList.toggle('bg-discord-blurple');\r\n            button.classList.toggle('bg-gray-600');\r\n            if(indicator) indicator.classList.toggle('translate-x-4');\r\n        });\r\n    });\r\n    \r\n    // Add new menu\r\n    const addMenuBtn = container.querySelector('#add-reaction-menu');\r\n    addMenuBtn?.addEventListener('click', () => {\r\n        // For now, we'll just re-render with a new blank menu object.\r\n        // A more sophisticated approach would manipulate the DOM directly.\r\n        this.showNotification(\"Creating a new menu... (UI placeholder)\", \"success\");\r\n    });\r\n    \r\n    // Save all settings\r\n    const saveBtn = container.querySelector('#save-autoroles-settings');\r\n    saveBtn?.addEventListener('click', async () => {\r\n        if (!guildId) return;\r\n        this.showNotification(\"Saving... (functionality to be fully implemented)\", \"success\");\r\n        // Full save logic will be implemented later\r\n    });\r\n  }\r\n\r\n  private renderLogsAndAnalyticsPage(guildId: string): string {\r\n    // NOTE: This is a static UI. Data fetching and event listeners will be added next.\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n        <!-- Header -->\r\n        <div>\r\n          <h2 class=\"text-3xl font-bold text-white\">Logs & Analytics</h2>\r\n          <p class=\"text-gray-400 mt-1\">Review server activity and track growth metrics.</p>\r\n        </div>\r\n\r\n        <!-- Analytics Overview -->\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-2\">Server Growth</h3>\r\n                <p class=\"text-3xl font-bold text-white\" id=\"server-growth-stat\">+12%</p>\r\n                <p class=\"text-sm text-gray-400\">in the last 30 days</p>\r\n            </div>\r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-2\">Engagement</h3>\r\n                <p class=\"text-3xl font-bold text-white\" id=\"engagement-stat\">78%</p>\r\n                <p class=\"text-sm text-gray-400\">Active members this week</p>\r\n            </div>\r\n            <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-2\">Top Command</h3>\r\n                <p class=\"text-3xl font-bold text-white\" id=\"top-command-stat\">/play</p>\r\n                <p class=\"text-sm text-gray-400\">Most used command</p>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Log Viewer -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex flex-wrap items-center justify-between mb-4 gap-4\">\r\n                <h3 class=\"text-lg font-semibold text-white\">Activity Logs</h3>\r\n                <div class=\"flex items-center space-x-4\">\r\n                    <select id=\"log-type-filter\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n                        <option value=\"all\">All Logs</option>\r\n                        <option value=\"moderation\">Moderation</option>\r\n                        <option value=\"tickets\">Tickets</option>\r\n                        <option value=\"joins_leaves\">Joins/Leaves</option>\r\n                        <option value=\"messages\">Message Edits/Deletes</option>\r\n                    </select>\r\n                    <input type=\"text\" id=\"log-user-filter\" placeholder=\"Filter by User ID...\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n                </div>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n                <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                    <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                        <tr>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Timestamp</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">User</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Type</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id=\"logs-table-body\">\r\n                        <!-- Log rows will be added dynamically here -->\r\n                        <tr><td colspan=\"4\" class=\"text-center py-8\">Loading logs...</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private attachLogsAndAnalyticsEventListeners(guildId: string): void {\r\n    this.updateLogsAndAnalytics(guildId); // Initial load\r\n\r\n    const logTypeFilter = this.container.querySelector('#log-type-filter');\r\n    const userFilter = this.container.querySelector('#log-user-filter');\r\n\r\n    logTypeFilter?.addEventListener('change', () => this.updateLogsAndAnalytics(guildId));\r\n    userFilter?.addEventListener('input', () => this.updateLogsAndAnalytics(guildId));\r\n  }\r\n  \r\n  private async updateLogsAndAnalytics(guildId: string): Promise<void> {\r\n    try {\r\n        const analytics = await this.fetchAnalyticsAndLogs(guildId);\r\n        if (!analytics) return;\r\n\r\n        // Update analytics stats\r\n        const growthStat = this.container.querySelector('#server-growth-stat');\r\n        const engagementStat = this.container.querySelector('#engagement-stat');\r\n        const topCommandStat = this.container.querySelector('#top-command-stat');\r\n        if (growthStat) growthStat.textContent = analytics.serverGrowth;\r\n        if (engagementStat) engagementStat.textContent = analytics.engagement;\r\n        if (topCommandStat) topCommandStat.textContent = analytics.topCommand;\r\n\r\n        // Update logs table\r\n        const logType = (this.container.querySelector('#log-type-filter') as HTMLSelectElement).value as LogType;\r\n        const userQuery = (this.container.querySelector('#log-user-filter') as HTMLInputElement).value.toLowerCase();\r\n\r\n        const filteredLogs = analytics.logs.filter(log => {\r\n            const typeMatch = logType === 'all' || log.type === logType;\r\n            const userMatch = log.userId.includes(userQuery) || log.userTag.toLowerCase().includes(userQuery);\r\n            return typeMatch && userMatch;\r\n        });\r\n\r\n        const tableBody = this.container.querySelector('#logs-table-body');\r\n        if (tableBody) {\r\n            if (filteredLogs.length === 0) {\r\n                tableBody.innerHTML = '<tr><td colspan=\"4\" class=\"text-center py-8\">No logs found for the selected filters.</td></tr>';\r\n                return;\r\n            }\r\n            tableBody.innerHTML = filteredLogs.map(log => `\r\n                <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n                    <td class=\"px-6 py-4\">${new Date(log.timestamp).toLocaleString()}</td>\r\n                    <td class=\"px-6 py-4\">${log.userTag} (${log.userId})</td>\r\n                    <td class=\"px-6 py-4\"><span class=\"px-2 py-1 text-xs rounded-full bg-discord-blurple/50\">${log.type}</span></td>\r\n                    <td class=\"px-6 py-4 font-mono\">${log.action}</td>\r\n                </tr>\r\n            `).join('');\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Failed to update logs and analytics\", e);\r\n        this.showNotification('Failed to load logs and analytics data.', 'error');\r\n    }\r\n  }\r\n\r\n  private async fetchAnalyticsAndLogs(guildId: string): Promise<ServerAnalytics | null> {\r\n    try {\r\n        const resp = await fetch(`/api/analytics-and-logs?guildId=${guildId}`);\r\n        if (!resp.ok) throw new Error('Failed to fetch analytics and logs');\r\n        return await resp.json();\r\n    } catch (e) {\r\n        console.error(\"Failed to fetch analytics and logs\", e);\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private renderPermissionsPage(guildId: string): string {\r\n    // NOTE: This is a static UI. Data fetching and event listeners will be added next.\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n        <!-- Header -->\r\n        <div>\r\n            <h2 class=\"text-3xl font-bold text-white\">Permission Management</h2>\r\n            <p class=\"text-gray-400 mt-1\">Control who can use bot commands and access dashboard features.</p>\r\n        </div>\r\n\r\n        <!-- Role-based Permissions -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-4\">Role Permissions</h3>\r\n            <p class=\"text-sm text-gray-400 mb-4\">Select a role to configure its permissions.</p>\r\n            <div class=\"flex items-center space-x-4\">\r\n                <select id=\"permission-role-select\" class=\"flex-grow bg-discord-dark/50 rounded-lg p-2\">\r\n                    <option>Loading roles...</option>\r\n                </select>\r\n            </div>\r\n            \r\n            <div id=\"permissions-editor\" class=\"mt-6 hidden\">\r\n                <!-- Dashboard Access -->\r\n                <div class=\"mb-6\">\r\n                    <h4 class=\"text-md font-semibold text-white mb-3\">Dashboard Access</h4>\r\n                    <div class=\"flex items-center justify-between p-3 bg-discord-dark/50 rounded-lg\">\r\n                        <div>\r\n                            <p class=\"font-medium\">Allow Dashboard Access</p>\r\n                            <p class=\"text-xs text-gray-400\">Allows users with this role to view the server dashboard.</p>\r\n                        </div>\r\n                        <button class=\"toggle-switch\" data-permission=\"dashboardAccess\"></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Module Permissions -->\r\n                <div class=\"mb-6\">\r\n                    <h4 class=\"text-md font-semibold text-white mb-3\">Module Permissions</h4>\r\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                        <div class=\"flex items-center justify-between p-3 bg-discord-dark/50 rounded-lg\">\r\n                            <p>Welcome System</p> <button class=\"toggle-switch\" data-permission=\"module.welcome\"></button>\r\n                        </div>\r\n                        <div class=\"flex items-center justify-between p-3 bg-discord-dark/50 rounded-lg\">\r\n                            <p>Ticket System</p> <button class=\"toggle-switch\" data-permission=\"module.tickets\"></button>\r\n                        </div>\r\n                        <div class=\"flex items-center justify-between p-3 bg-discord-dark/50 rounded-lg\">\r\n                            <p>Moderation</p> <button class=\"toggle-switch\" data-permission=\"module.moderation\"></button>\r\n                        </div>\r\n                         <div class=\"flex items-center justify-between p-3 bg-discord-dark/50 rounded-lg\">\r\n                            <p>Auto Roles</p> <button class=\"toggle-switch\" data-permission=\"module.autoroles\"></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Command Overrides -->\r\n                <div>\r\n                    <h4 class=\"text-md font-semibold text-white mb-3\">Command Overrides</h4>\r\n                    <p class=\"text-sm text-gray-400 mb-2\">Explicitly allow or deny specific commands for this role.</p>\r\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                        <div>\r\n                            <label class=\"block text-sm text-gray-300 mb-1\">Allowed Commands</label>\r\n                            <textarea class=\"w-full h-24 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"play, skip\"></textarea>\r\n                        </div>\r\n                        <div>\r\n                            <label class=\"block text-sm text-gray-300 mb-1\">Denied Commands</label>\r\n                            <textarea class=\"w-full h-24 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"ban, kick\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Save Button -->\r\n        <div class=\"flex justify-end mt-8\">\r\n            <button id=\"save-permissions-settings\" class=\"px-6 py-3 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Save Permissions</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private async attachPermissionsEventListeners(guildId: string): Promise<void> {\r\n    const roles = await this.fetchGuildRoles(guildId);\r\n    const roleSelect = this.container.querySelector<HTMLSelectElement>('#permission-role-select');\r\n    const editor = this.container.querySelector<HTMLElement>('#permissions-editor');\r\n    const saveButton = this.container.querySelector<HTMLButtonElement>('#save-permissions-settings');\r\n\r\n    if (!roleSelect || !editor || !saveButton) return;\r\n\r\n    // Populate role dropdown\r\n    roleSelect.innerHTML = '<option value=\"\">Select a role...</option>' + roles.map(r => `<option value=\"${r.id}\">${r.name}</option>`).join('');\r\n\r\n    let currentSettings: PermissionSettings | null = null;\r\n\r\n    // Role selection change\r\n    roleSelect.addEventListener('change', async (e) => {\r\n        const roleId = (e.target as HTMLSelectElement).value;\r\n        if (!roleId) {\r\n            editor.classList.add('hidden');\r\n            return;\r\n        }\r\n        \r\n        currentSettings = await this.fetchPermissions(guildId, roleId);\r\n        if (!currentSettings) {\r\n            this.showNotification('Could not load permissions for this role.', 'error');\r\n            return;\r\n        }\r\n\r\n        // Populate the editor with fetched settings\r\n        this.updatePermissionsEditor(currentSettings);\r\n        editor.classList.remove('hidden');\r\n    });\r\n\r\n    // Save button click\r\n    saveButton.addEventListener('click', async () => {\r\n        const roleId = roleSelect.value;\r\n        if (!roleId || !currentSettings) {\r\n            this.showNotification('Please select a role first.', 'error');\r\n            return;\r\n        }\r\n\r\n        // Collect data from the form\r\n        const newSettings: PermissionSettings = {\r\n            roleId: roleId,\r\n            dashboardAccess: this.container.querySelector<HTMLButtonElement>('[data-permission=\"dashboardAccess\"]')?.classList.contains('bg-discord-blurple') ?? false,\r\n            modules: {\r\n                welcome: this.container.querySelector<HTMLButtonElement>('[data-permission=\"module.welcome\"]')?.classList.contains('bg-discord-blurple') ?? false,\r\n                tickets: this.container.querySelector<HTMLButtonElement>('[data-permission=\"module.tickets\"]')?.classList.contains('bg-discord-blurple') ?? false,\r\n                moderation: this.container.querySelector<HTMLButtonElement>('[data-permission=\"module.moderation\"]')?.classList.contains('bg-discord-blurple') ?? false,\r\n                autoroles: this.container.querySelector<HTMLButtonElement>('[data-permission=\"module.autoroles\"]')?.classList.contains('bg-discord-blurple') ?? false,\r\n            },\r\n            allowedCommands: this.container.querySelector<HTMLTextAreaElement>('textarea[placeholder=\"play, skip\"]')?.value.split(',').map(c => c.trim()).filter(Boolean) ?? [],\r\n            deniedCommands: this.container.querySelector<HTMLTextAreaElement>('textarea[placeholder=\"ban, kick\"]')?.value.split(',').map(c => c.trim()).filter(Boolean) ?? [],\r\n        };\r\n        \r\n        await this.savePermissions(guildId, newSettings);\r\n    });\r\n\r\n    // Add toggle functionality\r\n    this.container.querySelectorAll('#permissions-editor .toggle-switch').forEach(button => {\r\n        button.addEventListener('click', () => {\r\n             const indicator = button.querySelector('.toggle-indicator');\r\n             button.classList.toggle('bg-discord-blurple');\r\n             button.classList.toggle('bg-gray-600');\r\n             if(indicator) indicator.classList.toggle('translate-x-4');\r\n        });\r\n    });\r\n  }\r\n  \r\n  private updatePermissionsEditor(settings: PermissionSettings) {\r\n      const setToggleState = (permission: string, enabled: boolean) => {\r\n          const button = this.container.querySelector<HTMLButtonElement>(`[data-permission=\"${permission}\"]`);\r\n          if (!button) return;\r\n          button.classList.toggle('bg-discord-blurple', enabled);\r\n          button.classList.toggle('bg-gray-600', !enabled);\r\n          const indicator = button.querySelector('.toggle-indicator');\r\n          if(indicator) indicator.classList.toggle('translate-x-4', enabled);\r\n      };\r\n\r\n      setToggleState('dashboardAccess', settings.dashboardAccess);\r\n      Object.entries(settings.modules).forEach(([key, value]) => {\r\n          setToggleState(`module.${key}`, value);\r\n      });\r\n\r\n      const allowedCommandsInput = this.container.querySelector<HTMLTextAreaElement>('textarea[placeholder=\"play, skip\"]');\r\n      const deniedCommandsInput = this.container.querySelector<HTMLTextAreaElement>('textarea[placeholder=\"ban, kick\"]');\r\n\r\n      if (allowedCommandsInput) allowedCommandsInput.value = settings.allowedCommands.join(', ');\r\n      if (deniedCommandsInput) deniedCommandsInput.value = settings.deniedCommands.join(', ');\r\n  }\r\n\r\n  private async fetchPermissions(guildId: string, roleId: string): Promise<PermissionSettings | null> {\r\n      try {\r\n          const resp = await fetch(`/api/permissions?guildId=${guildId}&roleId=${roleId}`);\r\n          if (!resp.ok) throw new Error('Failed to fetch permissions');\r\n          return await resp.json();\r\n      } catch (e) {\r\n          console.error(\"Failed to fetch permissions\", e);\r\n          return null;\r\n      }\r\n  }\r\n\r\n  private async savePermissions(guildId: string, settings: PermissionSettings): Promise<void> {\r\n      try {\r\n          const response = await fetch(`/api/permissions?guildId=${guildId}`, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(settings)\r\n          });\r\n          const result = await response.json();\r\n          if (result.success) {\r\n              this.showNotification('Permissions saved successfully!', 'success');\r\n          } else {\r\n              throw new Error(result.message);\r\n          }\r\n      } catch (error) {\r\n          console.error('Failed to save permissions:', error);\r\n          this.showNotification('Failed to save permissions.', 'error');\r\n      }\r\n  }\r\n\r\n  private renderKeyManagementPage(guildId: string): string {\r\n    // NOTE: This is a static UI. Data fetching and event listeners will be added next.\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n        <!-- Header -->\r\n        <div>\r\n            <h2 class=\"text-3xl font-bold text-white\">Key Management</h2>\r\n            <p class=\"text-gray-400 mt-1\">Manage licenses for premium modules and custom server features.</p>\r\n        </div>\r\n\r\n        <!-- Key Actions -->\r\n        <div class=\"glass-effect rounded-xl p-6 flex flex-wrap items-center justify-between gap-4\">\r\n            <h3 class=\"text-lg font-semibold text-white\">License Control</h3>\r\n            <div class=\"flex items-center space-x-2\">\r\n                <button id=\"create-key-btn\" class=\"px-4 py-2 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Create Key</button>\r\n                <input type=\"text\" id=\"redeem-key-input\" placeholder=\"Redeem a key...\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n                <button id=\"redeem-key-btn\" class=\"px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium\">Redeem</button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Key List -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-4\">Generated Keys</h3>\r\n             <div class=\"overflow-x-auto\">\r\n                <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                    <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                        <tr>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">License Key</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Type</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Unlocks</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Expiry</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id=\"keys-table-body\">\r\n                        <!-- Key rows will be added dynamically here -->\r\n                        <tr><td colspan=\"6\" class=\"text-center py-8\">Loading keys...</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n         <!-- Redemption Logs -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n            <h3 class=\"text-lg font-semibold text-white mb-4\">Redemption History</h3>\r\n             <div class=\"overflow-x-auto\">\r\n                <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                    <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                        <tr>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Timestamp</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Key</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Redeemed by</th>\r\n                            <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id=\"key-logs-table-body\">\r\n                        <tr><td colspan=\"4\" class=\"text-center py-8\">Loading history...</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private attachKeyManagementEventListeners(guildId: string): void {\r\n    this.updateKeyManagementData(guildId); // Initial load\r\n\r\n    const createBtn = this.container.querySelector('#create-key-btn');\r\n    const redeemBtn = this.container.querySelector('#redeem-key-btn');\r\n\r\n    createBtn?.addEventListener('click', () => {\r\n        // Here you would open a modal to create a new key.\r\n        // For now, we'll just show a notification.\r\n        this.showNotification('Key creation modal would open here.', 'success');\r\n    });\r\n\r\n    redeemBtn?.addEventListener('click', () => {\r\n        const keyInput = this.container.querySelector<HTMLInputElement>('#redeem-key-input');\r\n        if (keyInput && keyInput.value) {\r\n            this.showNotification(`Attempting to redeem key: ${keyInput.value}`, 'success');\r\n            // Add actual redemption logic here\r\n            keyInput.value = '';\r\n        } else {\r\n            this.showNotification('Please enter a key to redeem.', 'error');\r\n        }\r\n    });\r\n  }\r\n  \r\n  private async updateKeyManagementData(guildId: string): Promise<void> {\r\n    try {\r\n        const data = await this.fetchKeyManagementData(guildId);\r\n        if (!data) return;\r\n\r\n        // Populate keys table\r\n        const keysTableBody = this.container.querySelector('#keys-table-body');\r\n        if (keysTableBody) {\r\n            if (data.keys.length === 0) {\r\n                keysTableBody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center py-8\">No license keys found.</td></tr>';\r\n            } else {\r\n                keysTableBody.innerHTML = data.keys.map(key => this.renderKeyRow(key)).join('');\r\n            }\r\n        }\r\n\r\n        // Populate logs table\r\n        const logsTableBody = this.container.querySelector('#key-logs-table-body');\r\n        if (logsTableBody) {\r\n             if (data.logs.length === 0) {\r\n                logsTableBody.innerHTML = '<tr><td colspan=\"4\" class=\"text-center py-8\">No redemption history found.</td></tr>';\r\n            } else {\r\n                logsTableBody.innerHTML = data.logs.map(log => `\r\n                    <tr class=\"border-b border-gray-700\">\r\n                        <td class=\"px-6 py-4\">${new Date(log.timestamp).toLocaleString()}</td>\r\n                        <td class=\"px-6 py-4 font-mono\">${log.key}</td>\r\n                        <td class=\"px-6 py-4\">${log.userTag} (${log.userId})</td>\r\n                        <td class=\"px-6 py-4\"><span class=\"px-2 py-1 text-xs rounded-full ${log.status === 'Success' ? 'bg-discord-green/50' : 'bg-discord-red/50'}\">${log.status}</span></td>\r\n                    </tr>\r\n                `).join('');\r\n            }\r\n        }\r\n\r\n    } catch (e) {\r\n        console.error(\"Failed to update key management data\", e);\r\n        this.showNotification('Failed to load key management data.', 'error');\r\n    }\r\n  }\r\n  \r\n  private renderKeyRow(key: LicenseKey): string {\r\n    const statusColor = {\r\n        Active: 'bg-discord-green/50',\r\n        Redeemed: 'bg-discord-blurple/50',\r\n        Expired: 'bg-discord-yellow/50',\r\n        Revoked: 'bg-discord-red/50'\r\n    }[key.status];\r\n\r\n    return `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4 font-mono\">${key.key}</td>\r\n        <td class=\"px-6 py-4\">${key.type}</td>\r\n        <td class=\"px-6 py-4\">${key.unlocks}</td>\r\n        <td class=\"px-6 py-4\"><span class=\"px-2 py-1 text-xs rounded-full ${statusColor}\">${key.status}</span></td>\r\n        <td class=\"px-6 py-4\">${key.expiry ? new Date(key.expiry).toLocaleDateString() : 'Never'}</td>\r\n        <td class=\"px-6 py-4\">\r\n            <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Edit\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\"></path><path fill-rule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clip-rule=\"evenodd\"></path></svg></button>\r\n            <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Revoke\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\"></path></svg></button>\r\n        </td>\r\n      </tr>\r\n    `;\r\n  }\r\n\r\n  private async fetchKeyManagementData(guildId: string): Promise<{ keys: LicenseKey[], logs: KeyRedemptionLog[] } | null> {\r\n    try {\r\n        const resp = await fetch(`/api/key-management?guildId=${guildId}`);\r\n        if (!resp.ok) throw new Error('Failed to fetch key management data');\r\n        return await resp.json();\r\n    } catch (e) {\r\n        console.error(\"Failed to fetch key management data\", e);\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private renderStoreManagementPage(): string {\r\n    return `\r\n      <div class=\"space-y-8\">\r\n        <!-- Header -->\r\n        <div>\r\n          <h2 class=\"text-3xl font-bold text-white\">Store & Payment Management</h2>\r\n          <p class=\"text-gray-400 mt-1\">Manage Velari premium features sales and customer transactions.</p>\r\n        </div>\r\n\r\n        <!-- Quick Stats -->\r\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-green/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-green\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/>\r\n                  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clip-rule=\"evenodd\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Total Revenue</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"total-revenue\">$0.00</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-blurple/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-blurple\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Active Subscriptions</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"active-subscriptions\">0</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-yellow/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-yellow\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Total Transactions</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"total-transactions\">0</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-red/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-red\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Customers</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"total-customers\">0</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Navigation Tabs -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <nav class=\"flex space-x-8\">\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md bg-discord-blurple text-white\" data-tab=\"products\">Products</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"subscriptions\">Subscriptions</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"transactions\">Transactions</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"customers\">Customers</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"analytics\">Analytics</button>\r\n          </nav>\r\n        </div>\r\n\r\n        <!-- Tab Content -->\r\n        <div id=\"tab-content\">\r\n          <!-- Products Tab -->\r\n          <div id=\"products-tab\" class=\"tab-panel\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Products</h3>\r\n              <button id=\"create-product-btn\" class=\"px-4 py-2 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Create Product</button>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Name</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Type</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Price</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"products-table-body\">\r\n                  <tr><td colspan=\"5\" class=\"text-center py-8\">Loading products...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Subscriptions Tab -->\r\n          <div id=\"subscriptions-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Subscriptions</h3>\r\n              <button id=\"generate-checkout-btn\" class=\"px-4 py-2 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium\">Generate Checkout Link</button>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Customer</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Product</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Period</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"subscriptions-table-body\">\r\n                  <tr><td colspan=\"5\" class=\"text-center py-8\">Loading subscriptions...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Transactions Tab -->\r\n          <div id=\"transactions-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Transactions</h3>\r\n              <div class=\"flex space-x-2\">\r\n                <select id=\"transaction-status-filter\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n                  <option value=\"all\">All Status</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"failed\">Failed</option>\r\n                  <option value=\"refunded\">Refunded</option>\r\n                </select>\r\n                <input type=\"text\" id=\"transaction-search\" placeholder=\"Search by customer...\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n              </div>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Date</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Customer</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Product</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Amount</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"transactions-table-body\">\r\n                  <tr><td colspan=\"6\" class=\"text-center py-8\">Loading transactions...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Customers Tab -->\r\n          <div id=\"customers-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Customers</h3>\r\n              <div class=\"flex space-x-2\">\r\n                <input type=\"text\" id=\"customer-search\" placeholder=\"Search by email or Discord ID...\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n              </div>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Name</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Email</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Discord ID</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Total Spent</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Subscriptions</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"customers-table-body\">\r\n                  <tr><td colspan=\"6\" class=\"text-center py-8\">Loading customers...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Analytics Tab -->\r\n          <div id=\"analytics-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              <!-- Top Products -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Top Products</h3>\r\n                <div id=\"top-products-list\" class=\"space-y-3\">\r\n                  <div class=\"animate-pulse\">\r\n                    <div class=\"h-4 bg-discord-dark/50 rounded w-3/4\"></div>\r\n                    <div class=\"space-y-2 mt-2\">\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded\"></div>\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded w-5/6\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Recent Transactions -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Recent Transactions</h3>\r\n                <div id=\"recent-transactions-list\" class=\"space-y-3\">\r\n                  <div class=\"animate-pulse\">\r\n                    <div class=\"h-4 bg-discord-dark/50 rounded w-3/4\"></div>\r\n                    <div class=\"space-y-2 mt-2\">\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded\"></div>\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded w-5/6\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private attachStoreManagementEventListeners(): void {\r\n    this.updateStoreData(); // Initial load\r\n\r\n    // Tab navigation\r\n    const tabBtns = this.container.querySelectorAll('.tab-btn');\r\n    const tabPanels = this.container.querySelectorAll('.tab-panel');\r\n\r\n    tabBtns.forEach(btn => {\r\n      btn.addEventListener('click', () => {\r\n        const targetTab = (btn as HTMLElement).dataset.tab;\r\n        \r\n        // Update button states\r\n        tabBtns.forEach(b => {\r\n          b.classList.remove('bg-discord-blurple', 'text-white');\r\n          b.classList.add('text-gray-300');\r\n        });\r\n        btn.classList.add('bg-discord-blurple', 'text-white');\r\n        btn.classList.remove('text-gray-300');\r\n\r\n        // Show target panel\r\n        tabPanels.forEach(panel => {\r\n          panel.classList.add('hidden');\r\n        });\r\n        const targetPanel = this.container.querySelector(`#${targetTab}-tab`);\r\n        if (targetPanel) {\r\n          targetPanel.classList.remove('hidden');\r\n        }\r\n      });\r\n    });\r\n\r\n    // Action buttons\r\n    const createProductBtn = this.container.querySelector('#create-product-btn');\r\n    const generateCheckoutBtn = this.container.querySelector('#generate-checkout-btn');\r\n\r\n    createProductBtn?.addEventListener('click', () => {\r\n      this.showNotification('Product creation modal would open here.', 'success');\r\n    });\r\n\r\n    generateCheckoutBtn?.addEventListener('click', () => {\r\n      this.showNotification('Checkout link generator would open here.', 'success');\r\n    });\r\n\r\n    // Search and filter functionality\r\n    const transactionSearch = this.container.querySelector('#transaction-search');\r\n    const transactionStatusFilter = this.container.querySelector('#transaction-status-filter');\r\n    const customerSearch = this.container.querySelector('#customer-search');\r\n\r\n    transactionSearch?.addEventListener('input', () => this.updateStoreData());\r\n    transactionStatusFilter?.addEventListener('change', () => this.updateStoreData());\r\n    customerSearch?.addEventListener('input', () => this.updateStoreData());\r\n  }\r\n\r\n  private async updateStoreData(): Promise<void> {\r\n    try {\r\n      const [analytics, products, subscriptions, transactions, customers] = await Promise.all([\r\n        this.fetchStoreAnalytics(),\r\n        this.fetchProducts(),\r\n        this.fetchSubscriptions(),\r\n        this.fetchTransactions(),\r\n        this.fetchCustomers()\r\n      ]);\r\n\r\n      if (analytics) {\r\n        this.updateStoreStats(analytics);\r\n        this.updateAnalyticsTab(analytics);\r\n      }\r\n\r\n      if (products) {\r\n        this.updateProductsTable(products);\r\n      }\r\n\r\n      if (subscriptions) {\r\n        this.updateSubscriptionsTable(subscriptions);\r\n      }\r\n\r\n      if (transactions) {\r\n        this.updateTransactionsTable(transactions);\r\n      }\r\n\r\n      if (customers) {\r\n        this.updateCustomersTable(customers);\r\n      }\r\n\r\n    } catch (e) {\r\n      console.error(\"Failed to update store data\", e);\r\n      this.showNotification('Failed to load store data.', 'error');\r\n    }\r\n  }\r\n\r\n  private updateStoreStats(analytics: SalesAnalytics): void {\r\n    const totalRevenueEl = this.container.querySelector('#total-revenue');\r\n    const activeSubscriptionsEl = this.container.querySelector('#active-subscriptions');\r\n    const totalTransactionsEl = this.container.querySelector('#total-transactions');\r\n    const totalCustomersEl = this.container.querySelector('#total-customers');\r\n\r\n    if (totalRevenueEl) totalRevenueEl.textContent = `$${(analytics.totalRevenue / 100).toFixed(2)}`;\r\n    if (activeSubscriptionsEl) activeSubscriptionsEl.textContent = analytics.activeSubscriptions.toString();\r\n    if (totalTransactionsEl) totalTransactionsEl.textContent = analytics.totalTransactions.toString();\r\n    if (totalCustomersEl) totalCustomersEl.textContent = analytics.recentTransactions.length.toString();\r\n  }\r\n\r\n  private updateProductsTable(products: Product[]): void {\r\n    const tableBody = this.container.querySelector('#products-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (products.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"5\" class=\"text-center py-8\">No products found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = products.map(product => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4\">\r\n          <div>\r\n            <div class=\"font-medium text-white\">${product.name}</div>\r\n            <div class=\"text-sm text-gray-400\">${product.description}</div>\r\n          </div>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full bg-discord-blurple/50\">${product.type}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">$${(product.price / 100).toFixed(2)} ${product.currency}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full ${product.active ? 'bg-discord-green/50' : 'bg-discord-red/50'}\">${product.active ? 'Active' : 'Inactive'}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Edit\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\"></path><path fill-rule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clip-rule=\"evenodd\"></path></svg></button>\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Toggle Status\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\"></path></svg></button>\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateSubscriptionsTable(subscriptions: Subscription[]): void {\r\n    const tableBody = this.container.querySelector('#subscriptions-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (subscriptions.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"5\" class=\"text-center py-8\">No subscriptions found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = subscriptions.map(sub => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4\">${sub.customerId}</td>\r\n        <td class=\"px-6 py-4\">${sub.productId}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full ${sub.status === 'active' ? 'bg-discord-green/50' : 'bg-discord-red/50'}\">${sub.status}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">${new Date(sub.currentPeriodStart).toLocaleDateString()} - ${new Date(sub.currentPeriodEnd).toLocaleDateString()}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Cancel\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg></button>\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateTransactionsTable(transactions: Transaction[]): void {\r\n    const tableBody = this.container.querySelector('#transactions-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (transactions.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center py-8\">No transactions found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = transactions.map(txn => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4\">${new Date(txn.createdAt).toLocaleString()}</td>\r\n        <td class=\"px-6 py-4\">${txn.customerId}</td>\r\n        <td class=\"px-6 py-4\">${txn.productId}</td>\r\n        <td class=\"px-6 py-4\">$${(txn.amount / 100).toFixed(2)} ${txn.currency}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full ${this.getTransactionStatusColor(txn.status)}\">${txn.status}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          ${txn.status === 'completed' ? '<button class=\"p-1 text-gray-400 hover:text-white\" title=\"Refund\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/></svg></button>' : ''}\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateCustomersTable(customers: Customer[]): void {\r\n    const tableBody = this.container.querySelector('#customers-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (customers.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center py-8\">No customers found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = customers.map(customer => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4\">${customer.name}</td>\r\n        <td class=\"px-6 py-4\">${customer.email}</td>\r\n        <td class=\"px-6 py-4\">${customer.discordId || 'N/A'}</td>\r\n        <td class=\"px-6 py-4\">$${(customer.totalSpent / 100).toFixed(2)}</td>\r\n        <td class=\"px-6 py-4\">${customer.subscriptionCount}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"View Details\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"/><path fill-rule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clip-rule=\"evenodd\"/></svg></button>\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateAnalyticsTab(analytics: SalesAnalytics): void {\r\n    // Update top products\r\n    const topProductsList = this.container.querySelector('#top-products-list');\r\n    if (topProductsList) {\r\n      topProductsList.innerHTML = analytics.topProducts.map(product => `\r\n        <div class=\"flex justify-between items-center p-3 bg-discord-dark/50 rounded-lg\">\r\n          <div>\r\n            <div class=\"font-medium text-white\">${product.productName}</div>\r\n            <div class=\"text-sm text-gray-400\">${product.sales} sales</div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <div class=\"font-medium text-white\">$${(product.revenue / 100).toFixed(2)}</div>\r\n          </div>\r\n        </div>\r\n      `).join('');\r\n    }\r\n\r\n    // Update recent transactions\r\n    const recentTransactionsList = this.container.querySelector('#recent-transactions-list');\r\n    if (recentTransactionsList) {\r\n      recentTransactionsList.innerHTML = analytics.recentTransactions.map(txn => `\r\n        <div class=\"flex justify-between items-center p-3 bg-discord-dark/50 rounded-lg\">\r\n          <div>\r\n            <div class=\"font-medium text-white\">${txn.customerId}</div>\r\n            <div class=\"text-sm text-gray-400\">${new Date(txn.createdAt).toLocaleDateString()}</div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <div class=\"font-medium text-white\">$${(txn.amount / 100).toFixed(2)}</div>\r\n            <div class=\"text-sm text-gray-400\">${txn.status}</div>\r\n          </div>\r\n        </div>\r\n      `).join('');\r\n    }\r\n  }\r\n\r\n  private getTransactionStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'completed': return 'bg-discord-green/50';\r\n      case 'pending': return 'bg-discord-yellow/50';\r\n      case 'failed': return 'bg-discord-red/50';\r\n      case 'refunded': return 'bg-gray-500/50';\r\n      default: return 'bg-gray-500/50';\r\n    }\r\n  }\r\n\r\n  private async fetchStoreAnalytics(): Promise<SalesAnalytics | null> {\r\n    try {\r\n      const resp = await fetch('/api/store/analytics');\r\n      if (!resp.ok) throw new Error('Failed to fetch store analytics');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch store analytics\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchProducts(): Promise<Product[] | null> {\r\n    try {\r\n      const resp = await fetch('/api/store/products');\r\n      if (!resp.ok) throw new Error('Failed to fetch products');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch products\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchSubscriptions(): Promise<Subscription[] | null> {\r\n    try {\r\n      const resp = await fetch('/api/store/subscriptions');\r\n      if (!resp.ok) throw new Error('Failed to fetch subscriptions');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch subscriptions\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchTransactions(): Promise<Transaction[] | null> {\r\n    try {\r\n      const resp = await fetch('/api/store/transactions');\r\n      if (!resp.ok) throw new Error('Failed to fetch transactions');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch transactions\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchCustomers(): Promise<Customer[] | null> {\r\n    try {\r\n      const resp = await fetch('/api/store/customers');\r\n      if (!resp.ok) throw new Error('Failed to fetch customers');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch customers\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private renderCreatorStorefrontsPage(guildId: string): string {\r\n    return `\r\n      <div class=\"space-y-8\" data-guild-id=\"${guildId}\">\r\n        <!-- Header -->\r\n        <div>\r\n          <h2 class=\"text-3xl font-bold text-white\">Creator Storefronts</h2>\r\n          <p class=\"text-gray-400 mt-1\">Create and manage your server's own store to sell roles, keys, files, and services.</p>\r\n        </div>\r\n\r\n        <!-- Store Status -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <div class=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 class=\"text-lg font-semibold text-white\">Store Status</h3>\r\n              <p class=\"text-sm text-gray-400\">Enable your store to start selling products</p>\r\n            </div>\r\n            <button id=\"toggle-store-btn\" class=\"px-4 py-2 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Enable Store</button>\r\n          </div>\r\n          <div class=\"mt-4 text-sm text-gray-300\">\r\n            <p>Your store URL: <span class=\"font-mono bg-discord-dark/50 px-2 py-1 rounded\">velari.gg/yourserver</span></p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Quick Stats -->\r\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-green/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-green\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/>\r\n                  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clip-rule=\"evenodd\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Total Revenue</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"store-revenue\">$0.00</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-blurple/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-blurple\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Total Orders</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"store-orders\">0</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-yellow/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-yellow\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Customers</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"store-customers\">0</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"glass-effect rounded-xl p-6\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"p-3 bg-discord-red/20 rounded-lg\">\r\n                <svg class=\"w-6 h-6 text-discord-red\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"/>\r\n                </svg>\r\n              </div>\r\n              <div class=\"ml-4\">\r\n                <p class=\"text-sm font-medium text-gray-400\">Products</p>\r\n                <p class=\"text-2xl font-bold text-white\" id=\"store-products\">0</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Navigation Tabs -->\r\n        <div class=\"glass-effect rounded-xl p-6\">\r\n          <nav class=\"flex space-x-8\">\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md bg-discord-blurple text-white\" data-tab=\"setup\">Store Setup</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"products\">Products</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"orders\">Orders</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"customers\">Customers</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"promocodes\">Promo Codes</button>\r\n            <button class=\"tab-btn px-3 py-2 text-sm font-medium rounded-md text-gray-300 hover:text-white\" data-tab=\"analytics\">Analytics</button>\r\n          </nav>\r\n        </div>\r\n\r\n        <!-- Tab Content -->\r\n        <div id=\"storefront-tab-content\">\r\n          <!-- Setup Tab -->\r\n          <div id=\"setup-tab\" class=\"tab-panel\">\r\n            <div class=\"space-y-6\">\r\n              <!-- Basic Info -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Store Information</h3>\r\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Store Name</label>\r\n                    <input type=\"text\" id=\"store-name\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\" placeholder=\"My Awesome Store\">\r\n                  </div>\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Custom URL</label>\r\n                    <div class=\"flex\">\r\n                      <span class=\"bg-discord-dark/50 px-3 py-2 rounded-l-lg text-gray-400\">velari.gg/</span>\r\n                      <input type=\"text\" id=\"store-url\" class=\"flex-1 bg-discord-dark/50 rounded-r-lg p-2\" placeholder=\"yourserver\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"md:col-span-2\">\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Description</label>\r\n                    <textarea id=\"store-description\" class=\"w-full h-24 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Describe your store...\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Payment Settings -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Payment Settings</h3>\r\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Currency</label>\r\n                    <select id=\"store-currency\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\">\r\n                      <option value=\"USD\">USD ($)</option>\r\n                      <option value=\"EUR\">EUR (€)</option>\r\n                      <option value=\"GBP\">GBP (£)</option>\r\n                    </select>\r\n                  </div>\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Payment Processor</label>\r\n                    <select id=\"store-processor\" class=\"w-full bg-discord-dark/50 rounded-lg p-2\">\r\n                      <option value=\"stripe\">Stripe</option>\r\n                      <option value=\"paypal\">PayPal</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Policies -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Policies</h3>\r\n                <div class=\"space-y-4\">\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Terms of Service</label>\r\n                    <textarea id=\"store-tos\" class=\"w-full h-32 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Enter your terms of service...\"></textarea>\r\n                  </div>\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-300 mb-1\">Refund Policy</label>\r\n                    <textarea id=\"store-refund-policy\" class=\"w-full h-32 bg-discord-dark/50 rounded-lg p-2\" placeholder=\"Enter your refund policy...\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Save Button -->\r\n              <div class=\"flex justify-end\">\r\n                <button id=\"save-store-settings\" class=\"px-6 py-3 bg-discord-blurple hover:bg-discord-blurple/80 text-white rounded-lg font-medium\">Save Settings</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Products Tab -->\r\n          <div id=\"products-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Products</h3>\r\n              <button id=\"add-product-btn\" class=\"px-4 py-2 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Add Product</button>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Product</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Type</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Price</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Stock</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"store-products-table-body\">\r\n                  <tr><td colspan=\"6\" class=\"text-center py-8\">Loading products...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Orders Tab -->\r\n          <div id=\"orders-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Orders</h3>\r\n              <div class=\"flex space-x-2\">\r\n                <select id=\"order-status-filter\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n                  <option value=\"all\">All Status</option>\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"cancelled\">Cancelled</option>\r\n                  <option value=\"refunded\">Refunded</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Order ID</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Customer</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Items</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Total</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"store-orders-table-body\">\r\n                  <tr><td colspan=\"6\" class=\"text-center py-8\">Loading orders...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Customers Tab -->\r\n          <div id=\"customers-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Customers</h3>\r\n              <input type=\"text\" id=\"customer-search\" placeholder=\"Search customers...\" class=\"bg-discord-dark/50 rounded-lg p-2\">\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Discord ID</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Email</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Total Spent</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Orders</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"store-customers-table-body\">\r\n                  <tr><td colspan=\"5\" class=\"text-center py-8\">Loading customers...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Promo Codes Tab -->\r\n          <div id=\"promocodes-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h3 class=\"text-xl font-semibold text-white\">Promo Codes</h3>\r\n              <button id=\"add-promo-btn\" class=\"px-4 py-2 bg-discord-green hover:bg-discord-green/80 text-white rounded-lg font-medium\">Create Code</button>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full text-sm text-left text-gray-300\">\r\n                <thead class=\"text-xs text-gray-400 uppercase bg-discord-dark/50\">\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Code</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Type</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Value</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Uses</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Status</th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"store-promocodes-table-body\">\r\n                  <tr><td colspan=\"6\" class=\"text-center py-8\">Loading promo codes...</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Analytics Tab -->\r\n          <div id=\"analytics-tab\" class=\"tab-panel hidden\">\r\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              <!-- Top Products -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Top Products</h3>\r\n                <div id=\"store-top-products-list\" class=\"space-y-3\">\r\n                  <div class=\"animate-pulse\">\r\n                    <div class=\"h-4 bg-discord-dark/50 rounded w-3/4\"></div>\r\n                    <div class=\"space-y-2 mt-2\">\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded\"></div>\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded w-5/6\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Recent Orders -->\r\n              <div class=\"glass-effect rounded-xl p-6\">\r\n                <h3 class=\"text-lg font-semibold text-white mb-4\">Recent Orders</h3>\r\n                <div id=\"store-recent-orders-list\" class=\"space-y-3\">\r\n                  <div class=\"animate-pulse\">\r\n                    <div class=\"h-4 bg-discord-dark/50 rounded w-3/4\"></div>\r\n                    <div class=\"space-y-2 mt-2\">\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded\"></div>\r\n                      <div class=\"h-3 bg-discord-dark/50 rounded w-5/6\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private attachCreatorStorefrontsEventListeners(guildId: string): void {\r\n    // Tab switching\r\n    const tabButtons = this.container.querySelectorAll('.tab-btn');\r\n    const tabPanels = this.container.querySelectorAll('.tab-panel');\r\n\r\n    tabButtons.forEach(button => {\r\n      button.addEventListener('click', () => {\r\n        const targetTab = button.getAttribute('data-tab');\r\n        \r\n        // Update button styles\r\n        tabButtons.forEach(btn => {\r\n          btn.classList.remove('bg-discord-blurple', 'text-white');\r\n          btn.classList.add('text-gray-300', 'hover:text-white');\r\n        });\r\n        button.classList.add('bg-discord-blurple', 'text-white');\r\n        button.classList.remove('text-gray-300', 'hover:text-white');\r\n        \r\n        // Show target panel\r\n        tabPanels.forEach(panel => {\r\n          panel.classList.add('hidden');\r\n        });\r\n        const targetPanel = this.container.querySelector(`#${targetTab}-tab`);\r\n        if (targetPanel) {\r\n          targetPanel.classList.remove('hidden');\r\n        }\r\n\r\n        // Load data for the active tab\r\n        this.loadStorefrontTabData(guildId, targetTab || 'setup');\r\n      });\r\n    });\r\n\r\n    // Store toggle button\r\n    const toggleStoreBtn = this.container.querySelector('#toggle-store-btn');\r\n    if (toggleStoreBtn) {\r\n      toggleStoreBtn.addEventListener('click', () => {\r\n        this.toggleStoreStatus(guildId);\r\n      });\r\n    }\r\n\r\n    // Save store settings\r\n    const saveSettingsBtn = this.container.querySelector('#save-store-settings');\r\n    if (saveSettingsBtn) {\r\n      saveSettingsBtn.addEventListener('click', () => {\r\n        this.saveStoreSettings(guildId);\r\n      });\r\n    }\r\n\r\n    // Add product button\r\n    const addProductBtn = this.container.querySelector('#add-product-btn');\r\n    if (addProductBtn) {\r\n      addProductBtn.addEventListener('click', () => {\r\n        this.showAddProductModal(guildId);\r\n      });\r\n    }\r\n\r\n    // Add promo code button\r\n    const addPromoBtn = this.container.querySelector('#add-promo-btn');\r\n    if (addPromoBtn) {\r\n      addPromoBtn.addEventListener('click', () => {\r\n        this.showAddPromoModal(guildId);\r\n      });\r\n    }\r\n\r\n    // Order status filter\r\n    const orderStatusFilter = this.container.querySelector('#order-status-filter');\r\n    if (orderStatusFilter) {\r\n      orderStatusFilter.addEventListener('change', () => {\r\n        this.filterOrders(guildId, (orderStatusFilter as HTMLSelectElement).value);\r\n      });\r\n    }\r\n\r\n    // Customer search\r\n    const customerSearchInput = this.container.querySelector('#customer-search');\r\n    if (customerSearchInput) {\r\n      customerSearchInput.addEventListener('input', () => {\r\n        this.searchCustomers(guildId, (customerSearchInput as HTMLInputElement).value);\r\n      });\r\n    }\r\n  }\r\n\r\n  private async searchCustomers(_guildId: string, query: string): Promise<void> {\r\n    // Placeholder for customer search\r\n    console.log(`Searching customers with query: ${query}`);\r\n  }\r\n\r\n  private async loadStorefrontTabData(guildId: string, tab: string): Promise<void> {\r\n    try {\r\n      switch (tab) {\r\n        case 'products':\r\n          const products = await this.fetchStoreProducts(guildId);\r\n          if (products) {\r\n            this.updateStoreProductsTable(products);\r\n          }\r\n          break;\r\n        case 'orders':\r\n          const orders = await this.fetchStoreOrders(guildId);\r\n          if (orders) {\r\n            this.updateStoreOrdersTable(orders);\r\n          }\r\n          break;\r\n        case 'customers':\r\n          const customers = await this.fetchStoreCustomers(guildId);\r\n          if (customers) {\r\n            this.updateStoreCustomersTable(customers);\r\n          }\r\n          break;\r\n        case 'promocodes':\r\n          const promoCodes = await this.fetchStorePromoCodes(guildId);\r\n          if (promoCodes) {\r\n            this.updateStorePromoCodesTable(promoCodes);\r\n          }\r\n          break;\r\n        case 'analytics':\r\n          const analytics = await this.fetchStorefrontAnalytics(guildId);\r\n          if (analytics) {\r\n            this.updateStoreAnalyticsTab(analytics);\r\n          }\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Failed to load ${tab} data:`, error);\r\n    }\r\n  }\r\n\r\n  private async fetchStorefront(guildId: string): Promise<Storefront | null> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch storefront');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch storefront\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchStoreProducts(guildId: string): Promise<StoreProduct[] | null> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts/products?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch store products');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch store products\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchStoreOrders(guildId: string): Promise<StoreOrder[] | null> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts/orders?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch store orders');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch store orders\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchStoreCustomers(guildId: string): Promise<StoreCustomer[] | null> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts/customers?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch store customers');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch store customers\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchStorePromoCodes(guildId: string): Promise<PromoCode[] | null> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts/promocodes?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch store promo codes');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch store promo codes\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async fetchStorefrontAnalytics(guildId: string): Promise<StoreAnalytics | null> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts/analytics?guildId=${guildId}`);\r\n      if (!resp.ok) throw new Error('Failed to fetch store analytics');\r\n      return await resp.json();\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch store analytics\", e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private updateStorefrontUI(storefront: Storefront): void {\r\n    // Update store status button\r\n    const toggleBtn = this.container.querySelector('#toggle-store-btn');\r\n    if (toggleBtn) {\r\n      if (storefront.status === 'active') {\r\n        toggleBtn.textContent = 'Disable Store';\r\n        toggleBtn.classList.remove('bg-discord-green', 'hover:bg-discord-green/80');\r\n        toggleBtn.classList.add('bg-discord-red', 'hover:bg-discord-red/80');\r\n      } else {\r\n        toggleBtn.textContent = 'Enable Store';\r\n        toggleBtn.classList.remove('bg-discord-red', 'hover:bg-discord-red/80');\r\n        toggleBtn.classList.add('bg-discord-green', 'hover:bg-discord-green/80');\r\n      }\r\n    }\r\n\r\n    // Update store URL\r\n    const storeUrl = this.container.querySelector('.font-mono');\r\n    if (storeUrl) {\r\n      storeUrl.textContent = `velari.gg/${storefront.customUrl}`;\r\n    }\r\n\r\n    // Update form fields\r\n    const nameInput = this.container.querySelector('#store-name') as HTMLInputElement;\r\n    if (nameInput) nameInput.value = storefront.name;\r\n\r\n    const urlInput = this.container.querySelector('#store-url') as HTMLInputElement;\r\n    if (urlInput) urlInput.value = storefront.customUrl;\r\n\r\n    const descInput = this.container.querySelector('#store-description') as HTMLTextAreaElement;\r\n    if (descInput) descInput.value = storefront.description;\r\n\r\n    const currencySelect = this.container.querySelector('#store-currency') as HTMLSelectElement;\r\n    if (currencySelect) currencySelect.value = storefront.currency;\r\n\r\n    const processorSelect = this.container.querySelector('#store-processor') as HTMLSelectElement;\r\n    if (processorSelect) processorSelect.value = storefront.paymentProcessor;\r\n\r\n    const tosInput = this.container.querySelector('#store-tos') as HTMLTextAreaElement;\r\n    if (tosInput) tosInput.value = storefront.tos;\r\n\r\n    const refundInput = this.container.querySelector('#store-refund-policy') as HTMLTextAreaElement;\r\n    if (refundInput) refundInput.value = storefront.refundPolicy;\r\n  }\r\n\r\n  private updateStorefrontStats(analytics: StoreAnalytics): void {\r\n    const revenueEl = this.container.querySelector('#store-revenue');\r\n    if (revenueEl) revenueEl.textContent = `$${(analytics.totalRevenue / 100).toFixed(2)}`;\r\n\r\n    const ordersEl = this.container.querySelector('#store-orders');\r\n    if (ordersEl) ordersEl.textContent = analytics.totalOrders.toString();\r\n\r\n    const customersEl = this.container.querySelector('#store-customers');\r\n    if (customersEl) customersEl.textContent = analytics.activeCustomers.toString();\r\n\r\n    const productsEl = this.container.querySelector('#store-products');\r\n    if (productsEl) productsEl.textContent = analytics.topProducts.length.toString();\r\n  }\r\n\r\n  private updateStoreProductsTable(products: StoreProduct[]): void {\r\n    const tableBody = this.container.querySelector('#store-products-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (products.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center py-8\">No products found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = products.map(product => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4\">\r\n          <div class=\"flex items-center\">\r\n            ${product.imageUrl ? `<img src=\"${product.imageUrl}\" class=\"w-8 h-8 rounded mr-3\">` : ''}\r\n            <div>\r\n              <div class=\"font-medium text-white\">${product.name}</div>\r\n              <div class=\"text-sm text-gray-400\">${product.description}</div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full bg-discord-blurple/50\">${product.type}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">$${(product.price / 100).toFixed(2)}</td>\r\n        <td class=\"px-6 py-4\">${product.stock === null ? '∞' : product.stock}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full ${product.active ? 'bg-discord-green/50' : 'bg-discord-red/50'}\">${product.active ? 'Active' : 'Inactive'}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white mr-2\" title=\"Edit\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\"/></svg></button>\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Delete\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\"/></svg></button>\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateStoreOrdersTable(orders: StoreOrder[]): void {\r\n    const tableBody = this.container.querySelector('#store-orders-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (orders.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center py-8\">No orders found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = orders.map(order => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4 font-mono text-sm\">${order.id}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <div>\r\n            <div class=\"font-medium text-white\">${order.customerEmail}</div>\r\n            <div class=\"text-sm text-gray-400\">${order.customerDiscordId}</div>\r\n          </div>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <div class=\"text-sm\">\r\n            ${order.items.map(item => `${item.productName} (x${item.quantity})`).join(', ')}\r\n          </div>\r\n        </td>\r\n        <td class=\"px-6 py-4\">$${(order.totalAmount / 100).toFixed(2)}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full ${this.getOrderStatusColor(order.status)}\">${order.status}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white mr-2\" title=\"View Details\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"/><path fill-rule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clip-rule=\"evenodd\"/></svg></button>\r\n          ${order.status === 'completed' ? '<button class=\"p-1 text-gray-400 hover:text-white\" title=\"Refund\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/></svg></button>' : ''}\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateStoreCustomersTable(customers: StoreCustomer[]): void {\r\n    const tableBody = this.container.querySelector('#store-customers-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (customers.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"5\" class=\"text-center py-8\">No customers found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = customers.map(customer => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4 font-mono text-sm\">${customer.discordId}</td>\r\n        <td class=\"px-6 py-4\">${customer.email}</td>\r\n        <td class=\"px-6 py-4\">$${(customer.totalSpent / 100).toFixed(2)}</td>\r\n        <td class=\"px-6 py-4\">${customer.orderCount}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"View Details\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"/><path fill-rule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clip-rule=\"evenodd\"/></svg></button>\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateStorePromoCodesTable(promoCodes: PromoCode[]): void {\r\n    const tableBody = this.container.querySelector('#store-promocodes-table-body');\r\n    if (!tableBody) return;\r\n\r\n    if (promoCodes.length === 0) {\r\n      tableBody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center py-8\">No promo codes found.</td></tr>';\r\n      return;\r\n    }\r\n\r\n    tableBody.innerHTML = promoCodes.map(promo => `\r\n      <tr class=\"border-b border-gray-700 hover:bg-white/5\">\r\n        <td class=\"px-6 py-4 font-mono text-sm\">${promo.code}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full bg-discord-blurple/50\">${promo.type}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          ${promo.type === 'percent' ? `${promo.value}%` : `$${(promo.value / 100).toFixed(2)}`}\r\n        </td>\r\n        <td class=\"px-6 py-4\">${promo.currentUses}/${promo.maxUses || '∞'}</td>\r\n        <td class=\"px-6 py-4\">\r\n          <span class=\"px-2 py-1 text-xs rounded-full ${promo.active ? 'bg-discord-green/50' : 'bg-discord-red/50'}\">${promo.active ? 'Active' : 'Inactive'}</span>\r\n        </td>\r\n        <td class=\"px-6 py-4\">\r\n          <button class=\"p-1 text-gray-400 hover:text-white mr-2\" title=\"Edit\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\"/></svg></button>\r\n          <button class=\"p-1 text-gray-400 hover:text-white\" title=\"Delete\"><svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\"/></svg></button>\r\n        </td>\r\n      </tr>\r\n    `).join('');\r\n  }\r\n\r\n  private updateStoreAnalyticsTab(analytics: StoreAnalytics): void {\r\n    // Update top products\r\n    const topProductsList = this.container.querySelector('#store-top-products-list');\r\n    if (topProductsList) {\r\n      topProductsList.innerHTML = analytics.topProducts.map(product => `\r\n        <div class=\"flex justify-between items-center p-3 bg-discord-dark/50 rounded-lg\">\r\n          <div>\r\n            <div class=\"font-medium text-white\">${product.productName}</div>\r\n            <div class=\"text-sm text-gray-400\">${product.sales} sales</div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <div class=\"font-medium text-white\">$${(product.revenue / 100).toFixed(2)}</div>\r\n          </div>\r\n        </div>\r\n      `).join('');\r\n    }\r\n\r\n    // Update recent orders\r\n    const recentOrdersList = this.container.querySelector('#store-recent-orders-list');\r\n    if (recentOrdersList) {\r\n      recentOrdersList.innerHTML = analytics.recentOrders.map(order => `\r\n        <div class=\"flex justify-between items-center p-3 bg-discord-dark/50 rounded-lg\">\r\n          <div>\r\n            <div class=\"font-medium text-white\">${order.customerEmail}</div>\r\n            <div class=\"text-sm text-gray-400\">${new Date(order.createdAt).toLocaleDateString()}</div>\r\n          </div>\r\n          <div class=\"text-right\">\r\n            <div class=\"font-medium text-white\">$${(order.totalAmount / 100).toFixed(2)}</div>\r\n            <div class=\"text-sm text-gray-400\">${order.status}</div>\r\n          </div>\r\n        </div>\r\n      `).join('');\r\n    }\r\n  }\r\n\r\n  private getOrderStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'completed': return 'bg-discord-green/50';\r\n      case 'pending': return 'bg-discord-yellow/50';\r\n      case 'cancelled': return 'bg-discord-red/50';\r\n      case 'refunded': return 'bg-gray-500/50';\r\n      default: return 'bg-gray-500/50';\r\n    }\r\n  }\r\n\r\n  private async toggleStoreStatus(guildId: string): Promise<void> {\r\n    try {\r\n      const resp = await fetch(`/api/storefronts/toggle?guildId=${guildId}`, {\r\n        method: 'POST'\r\n      });\r\n      if (!resp.ok) throw new Error('Failed to toggle store status');\r\n      \r\n      // Reload storefront data\r\n      await this.loadStorefrontData(guildId);\r\n      this.showNotification('Store status updated successfully');\r\n    } catch (error) {\r\n      console.error('Failed to toggle store status:', error);\r\n      this.showNotification('Failed to update store status', 'error');\r\n    }\r\n  }\r\n\r\n  private async saveStoreSettings(guildId: string): Promise<void> {\r\n    try {\r\n      const settings = {\r\n        name: (this.container.querySelector('#store-name') as HTMLInputElement)?.value,\r\n        customUrl: (this.container.querySelector('#store-url') as HTMLInputElement)?.value,\r\n        description: (this.container.querySelector('#store-description') as HTMLTextAreaElement)?.value,\r\n        currency: (this.container.querySelector('#store-currency') as HTMLSelectElement)?.value,\r\n        paymentProcessor: (this.container.querySelector('#store-processor') as HTMLSelectElement)?.value,\r\n        tos: (this.container.querySelector('#store-tos') as HTMLTextAreaElement)?.value,\r\n        refundPolicy: (this.container.querySelector('#store-refund-policy') as HTMLTextAreaElement)?.value\r\n      };\r\n\r\n      const resp = await fetch(`/api/storefronts/settings?guildId=${guildId}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(settings)\r\n      });\r\n      \r\n      if (!resp.ok) throw new Error('Failed to save store settings');\r\n      \r\n      this.showNotification('Store settings saved successfully');\r\n    } catch (error) {\r\n      console.error('Failed to save store settings:', error);\r\n      this.showNotification('Failed to save store settings', 'error');\r\n    }\r\n  }\r\n\r\n  private showAddProductModal(_guildId: string): void {\r\n    // Placeholder for product creation modal\r\n    this.showNotification('Product creation modal would open here');\r\n  }\r\n\r\n  private showAddPromoModal(_guildId: string): void {\r\n    // Placeholder for promo code creation modal\r\n    this.showNotification('Promo code creation modal would open here');\r\n  }\r\n\r\n  private async filterOrders(_guildId: string, status: string): Promise<void> {\r\n    // Placeholder for order filtering\r\n    console.log(`Filtering orders by status: ${status}`);\r\n  }\r\n\r\n  private async loadStorefrontData(guildId: string): Promise<void> {\r\n    try {\r\n      // Load storefront info\r\n      const storefront = await this.fetchStorefront(guildId);\r\n      if (storefront) {\r\n        this.updateStorefrontUI(storefront);\r\n      }\r\n\r\n      // Load analytics\r\n      const analytics = await this.fetchStorefrontAnalytics(guildId);\r\n      if (analytics) {\r\n        this.updateStorefrontStats(analytics);\r\n      }\r\n\r\n      // Load initial tab data\r\n      this.loadStorefrontTabData(guildId, 'setup');\r\n    } catch (error) {\r\n      console.error('Failed to load storefront data:', error);\r\n    }\r\n  }\r\n}","import '../style.css'\r\n\r\nexport class LandingPage {\r\n  private container: HTMLElement\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.container = container\r\n    this.render()\r\n  }\r\n\r\n  private render() {\r\n    this.container.innerHTML = `\r\n      <div class=\"min-h-screen bg-gradient-to-b from-[#6366f1] to-[#4f46e5]\">\r\n        <!-- Navigation -->\r\n        <nav class=\"px-6 py-4\">\r\n          <div class=\"container mx-auto flex justify-between items-center\">\r\n            <div class=\"flex items-center\">\r\n              <img src=\"@Velari_Logo.png\" alt=\"Velari Logo\" class=\"h-12 w-12 rounded-full\"/>\r\n              <span class=\"ml-3 text-2xl font-bold text-white\">Velari</span>\r\n            </div>\r\n            <button id=\"add-to-server\" class=\"bg-white text-indigo-600 hover:bg-indigo-50 font-semibold py-2 px-6 rounded-lg transition-colors\">\r\n              Add to Your Server\r\n            </button>\r\n          </div>\r\n        </nav>\r\n\r\n        <!-- Hero Section -->\r\n        <div class=\"container mx-auto px-6 py-20\">\r\n          <div class=\"text-center\">\r\n            <div class=\"flex justify-center mb-8\">\r\n              <img src=\"@Velari_Logo.png\" alt=\"Velari Logo\" class=\"h-24 w-24 rounded-full shadow-lg\"/>\r\n            </div>\r\n            <h1 class=\"text-5xl md:text-6xl font-bold text-white mb-6\">\r\n              The Ultimate Discord Bot for Your Community\r\n            </h1>\r\n            <p class=\"text-xl text-white/90 mb-12 max-w-3xl mx-auto\">\r\n              Enhance your Discord server with powerful moderation tools, engaging games, and customizable features that bring your community together.\r\n            </p>\r\n            <button id=\"hero-cta\" class=\"bg-white text-indigo-600 hover:bg-indigo-50 text-lg font-semibold py-3 px-8 rounded-lg transition-colors\">\r\n              Get Started Free\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Features Section -->\r\n        <div class=\"container mx-auto px-6 py-20\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-12\">\r\n            <div class=\"bg-white/10 backdrop-blur-sm p-8 rounded-xl\">\r\n              <div class=\"text-white text-4xl mb-4\">🛡️</div>\r\n              <h3 class=\"text-2xl font-bold text-white mb-4\">Smart Moderation</h3>\r\n              <p class=\"text-white/90\">Automated moderation tools to keep your server safe and welcoming for everyone.</p>\r\n            </div>\r\n            <div class=\"bg-white/10 backdrop-blur-sm p-8 rounded-xl\">\r\n              <div class=\"text-white text-4xl mb-4\">🎮</div>\r\n              <h3 class=\"text-2xl font-bold text-white mb-4\">Fun Games</h3>\r\n              <p class=\"text-white/90\">Engage your community with interactive games and challenges that bring people together.</p>\r\n            </div>\r\n            <div class=\"bg-white/10 backdrop-blur-sm p-8 rounded-xl\">\r\n              <div class=\"text-white text-4xl mb-4\">⚙️</div>\r\n              <h3 class=\"text-2xl font-bold text-white mb-4\">Custom Commands</h3>\r\n              <p class=\"text-white/90\">Create and customize commands to match your server's unique needs and style.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    // Add event listeners\r\n    const addToServerBtn = this.container.querySelector('#add-to-server')\r\n    const heroCta = this.container.querySelector('#hero-cta')\r\n    \r\n    if (addToServerBtn && heroCta) {\r\n      addToServerBtn.addEventListener('click', () => this.handleAddToServer())\r\n      heroCta.addEventListener('click', () => this.handleAddToServer())\r\n    }\r\n  }\r\n\r\n  private handleAddToServer() {\r\n    // Redirect to the login/auth page\r\n    window.location.href = '/auth'\r\n  }\r\n} ","import { WelcomeScreen } from './components/WelcomeScreen'\r\nimport { Dashboard } from './components/Dashboard'\r\nimport { LandingPage } from './components/LandingPage'\r\nimport { DiscordAPI } from './services/DiscordAPI'\r\n\r\nexport class App {\r\n  private container: HTMLElement\r\n  private discordAPI: DiscordAPI\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.container = container\r\n    this.discordAPI = new DiscordAPI()\r\n    this.init()\r\n  }\r\n\r\n  private init(): void {\r\n    // Check the current route\r\n    const path = window.location.pathname\r\n    \r\n    // Check if user is already authenticated\r\n    const token = localStorage.getItem('discord_token')\r\n    \r\n    if (path === '/auth') {\r\n      this.showWelcome()\r\n    } else if (token) {\r\n      this.showDashboard()\r\n    } else {\r\n      this.showLandingPage()\r\n    }\r\n  }\r\n\r\n  public showLandingPage(): void {\r\n    this.clearContainer()\r\n    new LandingPage(this.container)\r\n  }\r\n\r\n  public showWelcome(): void {\r\n    this.clearContainer()\r\n    new WelcomeScreen(this.container)\r\n  }\r\n\r\n  public showDashboard(): void {\r\n    this.clearContainer()\r\n    new Dashboard(this.container, this.discordAPI, () => {\r\n      this.showWelcome()\r\n    })\r\n  }\r\n\r\n  private clearContainer(): void {\r\n    this.container.innerHTML = ''\r\n  }\r\n} ","import { DiscordAPI } from '../services/DiscordAPI'\r\n\r\nexport class AuthUtils {\r\n  private static discordAPI = new DiscordAPI()\r\n\r\n  public static async handleCallback(): Promise<boolean> {\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n    const code = urlParams.get('code')\r\n    const error = urlParams.get('error')\r\n\r\n    if (error) {\r\n      console.error('OAuth error:', error)\r\n      return false\r\n    }\r\n\r\n    if (!code) {\r\n      return false\r\n    }\r\n\r\n    try {\r\n      const tokenResponse = await this.discordAPI.exchangeCodeForToken(code)\r\n      localStorage.setItem('discord_token', tokenResponse.access_token)\r\n      \r\n      // Clear the URL parameters\r\n      window.history.replaceState({}, document.title, window.location.pathname)\r\n      \r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to exchange code for token:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  public static isAuthenticated(): boolean {\r\n    return !!localStorage.getItem('discord_token')\r\n  }\r\n\r\n  public static logout(): void {\r\n    localStorage.removeItem('discord_token')\r\n    window.location.href = '/'\r\n  }\r\n\r\n  public static getToken(): string | null {\r\n    return localStorage.getItem('discord_token')\r\n  }\r\n} ","import './style.css'\r\nimport { App } from './App'\r\nimport { AuthUtils } from './utils/auth'\r\n\r\nasync function initApp() {\r\n  const root = document.getElementById('root')\r\n  if (!root) {\r\n    console.error('Root element not found')\r\n    return\r\n  }\r\n\r\n  // Check if this is an OAuth callback\r\n  const urlParams = new URLSearchParams(window.location.search)\r\n  if (urlParams.has('code')) {\r\n    // Handle OAuth callback\r\n    const success = await AuthUtils.handleCallback()\r\n    if (success) {\r\n      // Redirect to dashboard after successful authentication\r\n      window.location.href = '/'\r\n      return\r\n    } else {\r\n      // Show error and redirect to welcome\r\n      alert('Authentication failed. Please try again.')\r\n      window.location.href = '/'\r\n      return\r\n    }\r\n  }\r\n\r\n  // Initialize the main application\r\n  new App(root)\r\n}\r\n\r\n// Initialize the application when DOM is loaded\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', initApp)\r\n} else {\r\n  initApp()\r\n} "],"names":["DiscordAPI","__publicField","code","response","token","guildId","WelcomeScreen","container","loginButton","authUrl","Dashboard","discordAPI","onLogout","allGuilds","ADMINISTRATOR","guild","resp","data","error","_a","g","logoutBtn","refreshBtn","btn","e","button","guildName","inviteUrl","message","type","notification","activePage","getPageContent","module","title","iconPath","iconClass","settings","channels","renderToggle","setting","enabled","isEnabled","settingKey","c","roles","categories","textChannels","role","reason","indicator","saveButton","reasons","div","el","_b","result","backBtn","serverSwitcherSelect","newGuildId","link","page","moduleContainer","moduleName","toggleButton","toggleIndicator","statsInterval","logsInterval","originalRender","stats","memberCountEl","botUptimeEl","commandsCountEl","logs","logsContainer","log","strikeActions","select","w","getInputValue","id","getTextAreaValue","cmd","renderMenu","menu","m","r","addMenuBtn","saveBtn","logTypeFilter","userFilter","analytics","growthStat","engagementStat","topCommandStat","logType","userQuery","filteredLogs","typeMatch","userMatch","tableBody","roleSelect","editor","currentSettings","roleId","newSettings","_c","_d","_e","_f","_g","setToggleState","permission","key","value","allowedCommandsInput","deniedCommandsInput","createBtn","redeemBtn","keyInput","keysTableBody","logsTableBody","statusColor","tabBtns","tabPanels","targetTab","b","panel","targetPanel","createProductBtn","generateCheckoutBtn","transactionSearch","transactionStatusFilter","customerSearch","products","subscriptions","transactions","customers","totalRevenueEl","activeSubscriptionsEl","totalTransactionsEl","totalCustomersEl","product","sub","txn","customer","topProductsList","recentTransactionsList","status","tabButtons","toggleStoreBtn","saveSettingsBtn","addProductBtn","addPromoBtn","orderStatusFilter","customerSearchInput","_guildId","query","tab","orders","promoCodes","storefront","toggleBtn","storeUrl","nameInput","urlInput","descInput","currencySelect","processorSelect","tosInput","refundInput","revenueEl","ordersEl","customersEl","productsEl","order","item","promo","recentOrdersList","LandingPage","addToServerBtn","heroCta","App","path","AuthUtils","urlParams","tokenResponse","initApp","root"],"mappings":"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"}